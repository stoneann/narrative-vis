{"nodes": [{"id": 2324, "value": "Refer to this post for Frequently Asked Questions regarding Project 5. Please keep the followups related to questions in this post only. The FAQ will be updated as the project progresses, so please check back here before posting a new question!. . Overview Session: Monday, 4/3 from 8-9pm. Slides: https://docs.google.com/presentation/d/1vyD7xIkS6ly1c5rQNaEH1xHY-UfPlQgg33X3MhZOAoQ/edit#slide=id.g101d43c8276_0_158. Zoom: https://umich.zoom.us/j/94564930578. Recording: https://umich.zoom.us/rec/share/f3hvM9tgSNkB8hKtzhn22H1vgbadboYxjO_uXhL23dE0RCuE2Iu18tzODuy1GjQr.3UxBNLz-L4rxBCxb. . Q: I've never worked with maps before.\u00a0 Where can I get a crash course about map functionality?. A: Staff last semester made a p5 walkthrough video! Check it out here!\u00a0 In addition, another staff member made this video a few years ago detailing a general overview of what they are and how you can use them.\u00a0 In addition here is a playlist for additional help related to p5.. \u00a0. Q: Should I use my Map.h implementation in the driver?. A: DO NOT DO THIS. Your implementation of Map is inefficient, and will cause problems down the road. Use the standard library implementation of map instead. (#include <map>) Great documentation can be found at http://www.cplusplus.com/reference/map/map/map/. . Q: I want to test if an Iterator points to a nullptr, how can I do this?. A: You're probably trying to compare the iterator to nullptr like this: ASSERT_EQUAL(iter, nullptr);. Because these two aren't of the same type, the unit testing framework will probably complain. Instead see if you can compare two objects of the same type - Iterator - which have the same value.. \u00a0. Q: What is less? What is std::less<T>? How do I use less?\u00a0. A: less is a private member variable of BST.. . It is an instance of a comparator class whose type is Compare. Compare is a template type. std::less<T> is a functor class in the stl that compares two elements of type T using the < operator. By default, Compare will be std::less<T>.. . In the BinarySearch_compile_check.cpp, there is an example of a BST with the default Compare and a BST with a custom comparator.\u00a0. . . In the first case, the template will be instantiated like\u00a0. Node *root;. std::less<int> less;. In the second case, the template will be instantiated like\u00a0. Node *root;. DuckWealthLess less;. . Q: What could be a cause of incorrect accuracy?\u00a0. A: Make sure you're properly handling duplicate words. Make sure ties are properly handled. Make sure log-probabilities are not being rounded due to being stored in an incorrect type.. \u00a0. Q: How do I record \"For each label L and word w, the number of posts with label L that contain w\"?\u00a0. A: You'll need a more complex data structure, since you'll need to store three pieces of information - the label, the word, and the count. There are at least two different ways to do this. Hint: The key type and/or value type of a map can be a class.. \u00a0. Q: Why do my test cases compile on Caen but not the autograder?. A: Double check that you haven't broken the public interface and added a public function. Also, do not put using namespace std in a header file.. \u00a0. Q: What's a csvstream and how do I use it?\u00a0. A: There are three really helpful examples at https://github.com/awdeorio/csvstream.. \u00a0. Q: Do we need to check for duplicates in our check_sorting_invariants_impl?. A: Your check_sorting_invariants_impl checks for a valid BST. A tree with duplicates is not a valid binary search tree. The most definitive and unambiguous description of the invariant you need to check for is described in the sorting invariants section of the spec. To be extra clear, if you were to call check_sorting_invariants on a tree that has duplicates in the right subtree, it should return false.. \u00a0. Q: VSCode syntax highlighting is breaking on BinarySearchTree.h and Map.h!. A: This appears to be a bug in VSCode 1.33 regarding default template parameters. We've found a few workarounds, probably the simplest of which is to add a comment to the template declaration:. . \u00a0. Q: How fast does my code need to run?. A: You should aim for the large test case to run within a minute or so. For reference, the instructor solution takes about 5 seconds on this test case.. \u00a0. Q: My code is too slow. What might be the reason?. A: Common sources of slowness include:. . Processing a post more than once (including reading it more than once or saving all the data in a vector).. . Iterating over a map to find something rather than using [] or find().. . Passing strings or containers by value.. . Iterating by value in a range-based for loop.. . Q: How can I check if a node equals nullptr? How can I set a node to nullptr?. A: You can check if a node is nullptr by: \u201dnode_ptr == nulptr\u201d or \u201c!node_ptr\u201d. You can create a node that is nullptr by doing \u201cNode* node_ptr = nullptr\u201d.. . Q: What does \u201cno matching function call\u201d mean?. A: This error means that some of your types or parameters to a function call are wrong. Let\u2019s take a function like the vector pushback function, which is used like this \u201cvec.pushback(5)\u201d. If you tried to call \u201cvec.pushback()\u201d it would get a no matching function call because there is no vector pushback function that doesn\u2019t take in any parameters. This same logic applies to constructors. Check the error to see what function is being improperly called and what parameters it takes.. \u00a0. Q: What is a false positive?. A: A false positive is when the test case passed on your code, however, it your code is still buggy. The test case passed because there was a logical error in your test case so that it wouldn\u2019t reveal the bug in your code. If you have one of these errors, I would suggest re-evaluating the logic of your test case. Come of office hours if you would like more indepth help on it!"}, {"id": 2325, "value": "Hi there. Everytime I make BinarySearchTree_public_test.exe and ./BinarySearchTree_public_test.exe, I get this thing in my terminal and have no idea what it is:. . . . It just loops like this..."}, {"id": 2326, "value": ". . Would my implementation here cause any error? Especially the return copy_nodes_impl(n) statement? I'm getting an error and am not sure if it's from this function."}, {"id": 2327, "value": "For empty_impl, is it considered empty if there is a root node (not nullptr), but left and right do not exist? Or is that considered not empty?"}, {"id": 2328, "value": "im getting the error\u00a0 \"non-void function does not return a value in all control paths\" when tryin to run public tests. I followed the walkthrough for all the scenarios smh"}, {"id": 2329, "value": "how can we test the tree deconstructor?"}, {"id": 2330, "value": "Do we need to test the destructor for our BTS?"}, {"id": 2331, "value": ". resovlved"}, {"id": 2332, "value": "I just wonder where could we find some additional instructions about how to do so, since I am trying to go through the walkthrough of the P5 map.h but do not get the way to create the instance. Any help are appreciated! Thanks a lot!"}, {"id": 2333, "value": "I was looking at the insert_impl require clause and I saw that item is not already in the tree. Would it be a good idea to use the find function to check that clause, or should I create a helper function to look through the tree (E.g., contain function), or is there a better way to do this check?\u00a0"}, {"id": 2334, "value": "I am confused about which way I should use the >> operator for csvstream. . It looks like one will read row into a map (I assume between column entries and their associated header) and one will read a row into a vector pairing entries with their header. Which one do I use? Am I correct about what they do? Thanks!"}, {"id": 2335, "value": "For insert_impl, when we insert a new node, are we inserting it at the bottom of the tree as a leaf node all the time and then sorting the tree after, or are we inserting the node in such a way that preserves the sorting invariant? If it is the latter case, I'm struggling to keep the function elegant and it becomes a mess of if else statements and temp nodes that get deleted."}, {"id": 2336, "value": "Hello, we are getting a seg fault when the copy constructor is called in BinarySearchTree_compile_check.cpp. I stepped through the copy_nodes_impl function and it failed on the line where we copied the right subtree. Not sure what's going wrong here but any help would be appreciated!. "}, {"id": 2337, "value": "We are getting an error message when we call less in our find_impl function and we are not sure what it means. Can anyone help us? "}, {"id": 2338, "value": "When we are checking for sorting invariant, how do we tackle the issue of certain elements on the left of the root being greater than the root. For example, how would you check this:. . \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 10 \u00a0 \u00a0. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0/ \u00a0 \u00a0 \u00a0\\\u00a0. \u00a0 \u00a0 \u00a0 \u00a0 5 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0. \u00a0 \u00a0 \u00a0 \u00a0/ \u00a0\\ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0. \u00a0 \u00a0 3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0. \u00a0 \u00a0/ \u00a0\\ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0. \u00a0 \u00a0 \u00a0 25 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0. \u00a0 \u00a0 \u00a0/ \u00a0\\ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0. . Obviously, the tree is not sorted as 25 > 5, 10. How would we consider the value 10 or 5 when we are dealing with the node with datum three? The only way I can think of is to find the maximum element on the left side of the tree and then check that against your current node's datum. And for the right side, to find the minimum and check against your current node's datum.. . Is this the right track? Can we add in helper functions for this? Any recommendations would be great!"}, {"id": 2339, "value": "I am a bit confused on how to write test cases for BinarySearchTree.h. In specific, I am unsure how to call functions. Also, I am unsure how to check if the function operated properly. Any guidance on how I should proceed?"}, {"id": 2340, "value": "I get this error when I run make BinarySearchTree_compile_check.exe. Could someone help to explain what's causing the error? Thanks!. "}, {"id": 2341, "value": "According to the specs, \"If any file cannot be opened, print out the following message, where filename is the name of the file that could not be opened\": cout << \"Error opening file: \" << filename << endl;. . Does this mean that if both testing and training files cannot be opened, we have to print the error message twice? Also, if the training file opens properly, but the testing does not, does that mean we run the output for the training, and then print the error message or do we straight away return the error message because one of the files couldn't be opened?"}, {"id": 2342, "value": "want to get an idea. lots of thanks:)"}, {"id": 2343, "value": "I would like to write additional tests for Map.h. I created a new file, Map_tests.cpp, to do this. Does anyone know how to modify the Makefile to support \"make Map_tests.exe\" so I can run them? Thanks!"}, {"id": 2344, "value": "We can add duplicates by dereferencing an iterator. Is this something we should prevent?"}, {"id": 2345, "value": "Should we be using the new keyword in our BST implementations? Should we be using dynamic memory, or just creating instances of node structs?"}, {"id": 2346, "value": "Any clues are appreciated! Thanks a lot!"}, {"id": 2347, "value": "Hi there. I'm not really sure what to return in the copy_nodes_impl function...\u00a0. . "}, {"id": 2348, "value": "Hello, for my min_greater_than_impl function (in BinarySearchTree.h), I am getting an error when I run the compile check that my function does not return in all control paths. I went over this with an IA in office hours today, and we tried adding a return node statement before the function ended which caused a segmentation fault. So I am not sure about the specific issue, and would appreciate any help. I have attached my function implementation below (this is posted privately). . "}, {"id": 2349, "value": "How do we \"free the memory\" for a specific node. I have an idea of the recursive structure of the function, but what do you do to the current node to \"free the memory\"? What does that mean? Do we use the 'delete' keyword? (I would assume not, since nodes are on the stack and not heap)\u00a0"}, {"id": 2350, "value": ". . Not sure how to fix this error. Are we not able to use less to compare the max element in the tree and the current node?"}, {"id": 2351, "value": "both terminal and xcode console spams me with \"3\"s when running the public test; anyone have any idea why? :C. "}, {"id": 2352, "value": "I am getting a compile error when I try to make the Map compiler check file. I am also getting an error for it on autograder. Below is a screenshot. I did not change any implementations I shouldn't have so I am confused.\u00a0 "}, {"id": 2353, "value": "How many total bugs are there to catch?"}, {"id": 2354, "value": "Does anyone know how I can fix this memory leak? "}, {"id": 2355, "value": "Hello, I am a bit worried about this project. In relation to project 4 is project 5 harder? I found the last project pretty challenging and wanted to know how students responded to this project in the past.. . Thank you :)"}, {"id": 2356, "value": "Hello, I am currently unsure about how to implement the Iterator begin function in map.h (I know how to create an iterator for linked lists but I am not sure how to create an iterator the first key pair value in a map). Any help would be appreciated"}, {"id": 2357, "value": "After implementing each of the functions within the BST file, our compile check doesn't seem to pass. It seems to be an issue with the < operator and possibly std::less. Here are the errors we are getting. It seems to all derive from that first error of :. . /usr/include/c++/11/bits/stl_function.h:400:20: error: no match for \u2018operator<\u2019 (operand types are \u2018const Duck\u2019 and \u2018const Duck\u2019). \u00a0 400 | \u00a0 \u00a0 \u00a0 { return __x < __y; }. \u00a0 \u00a0 \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0~~~~^~~~~. We use the less than operator like such:. . std::less<T> {} (x, y). . . Edit: As per instructor's answer -- fixed by using less like less(x,y) rather than as above."}, {"id": 2358, "value": "What exactly is the Compare object and how do we use it to \u201ccompare\u201d? It\u2019s in a few of the functions in the bst.h and I don\u2019t know how to use it\u00a0"}, {"id": 2359, "value": ". Hi, im trying to use the check_sorting_invariant function, calling it recursively like :. . check_sorting_invariant(node->right, less). but I am getting this error, that Im confused with. Any help?. . "}, {"id": 2360, "value": "Why are we returning size_t for the height and size function instead of int like we did for linked lists?"}, {"id": 2361, "value": "How are you meant to use the \"Key_compare\" functor?. . Right now, if I return \"true\" or \"false\" from my operator() implementation for PairLess in Map.h, the compile check runs just fine. However, the moment I try to actually compare the two values (such as \"return Key_compare(lhs.first, rhs.first);\"), the compile check fails with a message like the following:. . In file included from Map_compile_check.cpp:5:. Map.h: In instantiation of \u2018bool Map<Key_type, Value_type, Key_compare>::PairLess::operator()(const Pair_type&, const Pair_type&) const [with Key_type = std::__cxx11::basic_string<char>; Value_type = int; Key_compare = std::less<std::__cxx11::basic_string<char> >; Map<Key_type, Value_type, Key_compare>::Pair_type = std::pair<std::__cxx11::basic_string<char>, int>]\u2019:. BinarySearchTree.h:653:13: \u00a0 required from \u2018static BinarySearchTree<T, Compare>::Node* BinarySearchTree<T, Compare>::min_greater_than_impl(BinarySearchTree<T, Compare>::Node*, const T&, Compare) [with T = std::pair<std::__cxx11::basic_string<char>, int>; Compare = Map<std::__cxx11::basic_string<char>, int>::PairLess]\u2019. BinarySearchTree.h:200:45: \u00a0 required from \u2018BinarySearchTree<T, Compare>::Iterator& BinarySearchTree<T, Compare>::Iterator::operator++() [with T = std::pair<std::__cxx11::basic_string<char>, int>; Compare = Map<std::__cxx11::basic_string<char>, int>::PairLess]\u2019. Map_compile_check.cpp:98:7: \u00a0 required from here. Map.h:44:18: error: no matching function for call to \u2018std::less<std::__cxx11::basic_string<char> >::less(const std::__cxx11::basic_string<char>&, const std::__cxx11::basic_string<char>&)\u2019. \u00a0 \u00a044 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return Key_compare(lhs.first, rhs.first);. \u00a0 \u00a0 \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from /usr/include/c++/11/string:48,. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0from Map_compile_check.cpp:3:. /usr/include/c++/11/bits/stl_function.h:395:12: note: candidate: \u2018constexpr std::less<std::__cxx11::basic_string<char> >::less()\u2019. \u00a0 395 | \u00a0 \u00a0 struct less : public binary_function<_Tp, _Tp, bool>. \u00a0 \u00a0 \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0^~~~. /usr/include/c++/11/bits/stl_function.h:395:12: note: \u00a0 candidate expects 0 arguments, 2 provided. /usr/include/c++/11/bits/stl_function.h:395:12: note: candidate: \u2018constexpr std::less<std::__cxx11::basic_string<char> >::less(const std::less<std::__cxx11::basic_string<char> >&)\u2019. /usr/include/c++/11/bits/stl_function.h:395:12: note: \u00a0 candidate expects 1 argument, 2 provided. /usr/include/c++/11/bits/stl_function.h:395:12: note: candidate: \u2018constexpr std::less<std::__cxx11::basic_string<char> >::less(std::less<std::__cxx11::basic_string<char> >&&)\u2019. /usr/include/c++/11/bits/stl_function.h:395:12: note: \u00a0 candidate expects 1 argument, 2 provided. In file included from Map_compile_check.cpp:5:. Map.h: In instantiation of \u2018bool Map<Key_type, Value_type, Key_compare>::PairLess::operator()(const Pair_type&, const Pair_type&) const [with Key_type = Duck; Value_type = std::__cxx11::basic_string<char>; Key_compare = DuckWealthLess; Map<Key_type, Value_type, Key_compare>::Pair_type = std::pair<Duck, std::__cxx11::basic_string<char> >]\u2019:. BinarySearchTree.h:653:13: \u00a0 required from \u2018static BinarySearchTree<T, Compare>::Node* BinarySearchTree<T, Compare>::min_greater_than_impl(BinarySearchTree<T, Compare>::Node*, const T&, Compare) [with T = std::pair<Duck, std::__cxx11::basic_string<char> >; Compare = Map<Duck, std::__cxx11::basic_string<char>, DuckWealthLess>::PairLess]\u2019. BinarySearchTree.h:200:45: \u00a0 required from \u2018BinarySearchTree<T, Compare>::Iterator& BinarySearchTree<T, Compare>::Iterator::operator++() [with T = std::pair<Duck, std::__cxx11::basic_string<char> >; Compare = Map<Duck, std::__cxx11::basic_string<char>, DuckWealthLess>::PairLess]\u2019. Map_compile_check.cpp:99:7: \u00a0 required from here. Map.h:44:18: error: no matching function for call to \u2018DuckWealthLess::DuckWealthLess(const Duck&, const Duck&)\u2019. \u00a0 \u00a044 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return Key_compare(lhs.first, rhs.first);. \u00a0 \u00a0 \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Map_compile_check.cpp:20:7: note: candidate: \u2018constexpr DuckWealthLess::DuckWealthLess()\u2019. \u00a0 \u00a020 | class DuckWealthLess {. \u00a0 \u00a0 \u00a0 | \u00a0 \u00a0 \u00a0 ^~~~~~~~~~~~~~. Map_compile_check.cpp:20:7: note: \u00a0 candidate expects 0 arguments, 2 provided. Map_compile_check.cpp:20:7: note: candidate: \u2018constexpr DuckWealthLess::DuckWealthLess(const DuckWealthLess&)\u2019. Map_compile_check.cpp:20:7: note: \u00a0 candidate expects 1 argument, 2 provided. Map_compile_check.cpp:20:7: note: candidate: \u2018constexpr DuckWealthLess::DuckWealthLess(DuckWealthLess&&)\u2019. Map_compile_check.cpp:20:7: note: \u00a0 candidate expects 1 argument, 2 provided. make: *** [Makefile:43: Map_compile_check.exe] Error 1. This error makes no sense, as all of the \"no matching function for call to\" errors HAVE matching function calls (\"DuckWealthLess::DuckWealthLess(const Duck&, const Duck&)\", for example, is defined exactly as it says it needs to be inside of the compile check function; the class is the same, the arguments are the same, all of it). I don't understand how the \"Key_compare\" functor is meant to be used.. . Any help is appreciated."}, {"id": 2362, "value": "In this information we can have some keys that their value is 0 right? And we would have a total of |C| * |W| keys?"}, {"id": 2363, "value": "For the insert function, we need to implement this keeping in mind the sorting invariant. Do we also need to keep in mind the duplicates invariant when implementing or do we just assume that no duplicate values will be inserted.\u00a0"}, {"id": 2364, "value": "Hello, I was wondering if there were any big changes to project 5 for this semester compared to fall 22 semester. I'm unfortunately retaking the class and was wondering."}, {"id": 2365, "value": "I am a bit confused about the root node. When we insert a new element into the tree, it looks like the root node is set to point at that element. So am I correct in saying that the root changes after each insertion, or am I missing something? Thanks!. . . . I am just confused since size() starts from the root, so when I insert an element, the root changes to that element and the size is always stuck at 1.\u00a0"}, {"id": 2366, "value": "I'm a bit confused about how to approach the algorithm for min_greater_than_impl with only one recursive call. Does anyone have any pointers in the right direction?"}, {"id": 2367, "value": "Do we know enough to do all of project 5? And if not, what parts of the project can we do right now and what date/lecture will we know enough to complete the whole project? I want to start on this early ASAP, but I understand that it might be like P4 where we had to wait for the linked lists and iterator lecture."}, {"id": 2368, "value": ". Currently, I'm calling my less function like this in my BinarySearchTree.h and its giving me compile errors on the autograder, I went to the website of the previous post about calling the less function and followed that format and it gave me errors. The bellow writing would return true if thing1 were less than thing2. I'm just confused on how to call less in my program, any help would be appreciated.. . less<T>{}(thing1, thing2). "}, {"id": 2369, "value": "I was trying to get an idea of time, and was just wondering if project 5 had changed much from last semester?"}, {"id": 2370, "value": "Can we assume that the inserted element into the tree is not going to be contained in the root node. Or do we have to account for insertion of the same item into the tree that is contained in the root node."}, {"id": 2371, "value": "Hello, I wasn't sure about the specific syntax for using the less comparator to compare two values."}, {"id": 2372, "value": "I am confused because in train_small.csv it is in the format \"n,unique_views,tag,content\", but in the other ones it is in \"tag,content\""}, {"id": 2373, "value": ". For copy_nodes_impl(), do we create a new node that has the same structure and we connect the top node to the new node?. "}, {"id": 2374, "value": "Can someone explain to me why do I have this error?. . \u00a0"}, {"id": 2375, "value": "if so, how do we go about doing it?"}, {"id": 2376, "value": "Hi,. Is there a simple example of how to use the Compare std::less operator in bst.h with static types such as ints or strings so I know how to implement it correctly? Thank you"}, {"id": 2377, "value": "Which file should I begin with? I am so lost on where to start :/"}, {"id": 2378, "value": "I keep getting this error\u00a0 when I test my api. I was wondering if anyone had a fix for this problem?. . "}, {"id": 2379, "value": "When will the autograder for project 5 be released?"}], "links": [{"source": 2324, "target": 2324, "value": 1.0000000000000002}, {"source": 2326, "target": 2326, "value": 1.0}, {"source": 2328, "target": 2328, "value": 0.9999999999999996}, {"source": 2337, "target": 2337, "value": 0.9999999999999998}, {"source": 2340, "target": 2340, "value": 1.0000000000000002}, {"source": 2340, "target": 2374, "value": 0.6123724356957945}, {"source": 2341, "target": 2341, "value": 1.0}, {"source": 2348, "target": 2348, "value": 1.0}, {"source": 2350, "target": 2350, "value": 1.0}, {"source": 2352, "target": 2352, "value": 0.9999999999999998}, {"source": 2357, "target": 2357, "value": 1.0}, {"source": 2359, "target": 2359, "value": 1.0000000000000002}, {"source": 2361, "target": 2361, "value": 1.0000000000000002}, {"source": 2368, "target": 2368, "value": 1.0000000000000002}, {"source": 2374, "target": 2374, "value": 0.9999999999999998}, {"source": 2378, "target": 2378, "value": 0.9999999999999997}]}