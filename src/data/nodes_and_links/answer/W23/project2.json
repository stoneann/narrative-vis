{"nodes": [{"id": 2760, "value": ""}, {"id": 2761, "value": "They've been updated now."}, {"id": 2762, "value": "The autograder automatically selects the submission that would give you the highest score."}, {"id": 2763, "value": "Yes, you need to implement it. Though you don't need to rewrite \"friend\" before it, just implement it as a normal function."}, {"id": 2764, "value": "Resolved"}, {"id": 2765, "value": "soon\u2122"}, {"id": 2766, "value": "As long as you started the submission before the deadline, it will still count"}, {"id": 2767, "value": "Unfortunately it's hard to say, given the nature of undefined behavior. In the future we recommend setting up the address sanitizer to avoid issues like this: https://eecs280staff.github.io/tutorials/setup_asan.html"}, {"id": 2768, "value": "The score that you will get will be the best total score, combined public and private, that you got from any single submission. The style checks are part of this."}, {"id": 2769, "value": "Your final graded score will be according to whichever of your submissions scored the highest (including private test cases)."}, {"id": 2770, "value": "There are no late days for projects. Late days are usually only granted for extenuating circumstances. If you think this applies to you, then fill out the Extension form."}, {"id": 2771, "value": "For the sake of fairness, we do not allow extra submissions on a case-by-case basis except in extenuating personal circumstances."}, {"id": 2772, "value": "It's marked when we hit submit.\u00a0"}, {"id": 2773, "value": "The tests should output files that end in .out.ppm. Try looking in your FileExplorer/Finder."}, {"id": 2774, "value": "Did you remember to make the original Image pointer reference the modified image?"}, {"id": 2775, "value": "nope sowwy"}, {"id": 2776, "value": "My best guess without looking at any code is that you're indexing out of bounds somewhere."}, {"id": 2777, "value": "It's working for me"}, {"id": 2778, "value": "\"False positive\" means that the test fails even when run against a correct solution. One of your asserts must be incorrect."}, {"id": 2779, "value": ""}, {"id": 2780, "value": "Find an image you would like to resize (within the max capabilities of your program), use an online converter to get it to .ppm format, move the .ppm file into your project directory, and then resize it at the command line using resize.exe, then convert the out.ppm file back into a .jpg"}, {"id": 2781, "value": "If you add the include for Matrix.h and it works in terminal, then it should be fine. Sometimes IDEs don't like to be smart."}, {"id": 2782, "value": "I would refrain from posting your code on Piazza as that is an honor code violation."}, {"id": 2783, "value": "Odds are that you're indexing out-of-bounds somewhere, and this doesn't always raise an error locally. AG is a bit more strict. See if you can find anywhere where you may be indexing out-of-bounds."}, {"id": 2784, "value": "Run your code with a debugger and see the call stack where the assertion fails. See where Matrix_at gets called, and your issue is probably there. You are trying to call Matrix_at with an invalid column."}, {"id": 2785, "value": "You are trying to cout an ifstream instead of a string. You should be printing the actual string filename instead."}, {"id": 2786, "value": ""}, {"id": 2787, "value": "dealing with the same issue right now...spent all day trying to find the issue. I haven't fixed mine but make sure your matrix col of min value in a row is working completely correctly. . EDIT: for the error, that just means your output doesn't match what the correct output is supposed to be. i can't say for sure what exactly is causing the error, but i would double check that when you call Matrix_col_of_min_value_in_row, you do so knowing that the variable you put in for column_end is exclusive. ik that's caused a lot of bugs for me so i'd check that out.\u00a0. . "}, {"id": 2788, "value": "Rename the files to end with .cppYou seem to have removed their extensions by accident."}, {"id": 2789, "value": ". what should I have in the \"Arguments passed on launch\" when I edit my scheme?. . The arguments you would pass in the command line, so for example. . ./resize.exe horses.ppm horses_400x250.ppm 400 250. note: don't pass in the program name (aka resize.exe)"}, {"id": 2790, "value": ". Could not load source './csu/../sysdeps/nptl/libc_start_call_main.h': 'SourceRequest' not supported... . Can you provide more info, like a screenshot and what IDE this is. . . . . . . . On autograder's Resize Public Test, we get an X for Run (no output), but the check is correct and shows our output is the same. The problem seems to be that our resize.exe has the correct output, just doesn't actually run?. . . . . . . You are returning 1 at the end of resize.cpp, you should return 0 or don't return anything. return 1 indicates there was an error with the program."}, {"id": 2791, "value": "Check your conditions on your error checking. I.E you\u2019re argc checks and height and width checks.\u00a0"}, {"id": 2792, "value": ""}, {"id": 2793, "value": ""}, {"id": 2794, "value": "Yes, I believe the spec says you should for quite a few others."}, {"id": 2795, "value": ""}, {"id": 2796, "value": "Yup! It should change all values since the entire row (it's both the first and last) is on the border."}, {"id": 2797, "value": ""}, {"id": 2798, "value": "Take a look at the public image tests, you'll see an example there"}, {"id": 2799, "value": ""}, {"id": 2800, "value": "The error is a memory leak. In other words, you are forgetting to delete a matrix/image that you created with the \"new\" keyword earlier in your function.\u00a0To fix the error, make sure you type \"delete mat;\" or whatever similar phrase depending on your variable name. Every time you create a new image/matrix you should make sure to delete in at the end of the function.\u00a0. . "}, {"id": 2801, "value": "I think you're talking about resize.cpp? Remember to\u00a0#include <fstream>\u00a0in resize."}, {"id": 2802, "value": ""}, {"id": 2803, "value": "Remember to initialize your matrix channels in the image before you set pixels in them. You can either individually initialize them before the for loop like in the other\u00a0Image_init, or you can just call Image_init\u00a0directly."}, {"id": 2804, "value": ""}, {"id": 2805, "value": ""}, {"id": 2806, "value": "Most likely you\u2019re accessing bad memory, or are using uninitialized memory somewhere.\u00a0"}, {"id": 2807, "value": "From lecture, the argument should be a C-string. Specifically,\u00a0argv[3]\u00a0and\u00a0argv[4]\u00a0for width and height."}, {"id": 2808, "value": "It looks like there's something incorrect about the following line:. . . ASSERT_EQUAL(Matrix_min_value_in_row(mat,0,0,499), 591);"}, {"id": 2809, "value": "Yes. You shouldn't be setting or getting pixels in an image unless the Image has been initialized. You shouldn't have to initialize them within these functions, though. Just at some point before calling them."}, {"id": 2810, "value": "You're using some regular\u00a0assert\u00a0statements instead of asserts defined by the unit testing framework, like\u00a0ASSERT_EQUAL. Change them to unit testing framework asserts and you should be good."}, {"id": 2811, "value": "All the style checks are public on AG along with the point values. There aren't any private style checks."}, {"id": 2812, "value": "1.) Includes: yup! you should just need to include processing and Image.. . 2.) If height isn't entered, then you just don't need to\u00a0seam_carve_height. You're right that\u00a0argv[4]\u00a0will cause undefined behavior if height isn't specified, so you'll have to only use it if height is specified."}, {"id": 2813, "value": "resolved"}, {"id": 2814, "value": "Lines are counted by whatever is in the function, not by any lines within any called functions. Breaking into functions sounds like a good move."}, {"id": 2815, "value": "It looks like you aren't setting the height and width variables in\u00a0Image_init\u00a0that takes an istream."}, {"id": 2816, "value": "Use your visual debugger to see where the assertion is failing and see what function call is causing this. You are indexing columns out of bounds."}, {"id": 2817, "value": "We cannot disclose information about the test cases specifically, all we can recommend is that you take a good effort to read the spec and function RMEs in order to decipher potential edge cases. You already have most of the points, I would not stress too much about this. Good job thus far, continue working on this if you have the time.\u00a0"}, {"id": 2818, "value": ""}, {"id": 2819, "value": "I think it's best if you make a private post with a screenshot of your code or go to OH."}, {"id": 2820, "value": "This is a 2x2 matrix, make sure you are printing the rows on separate lines."}, {"id": 2821, "value": "Image_get_pixel() returns a Pixel. You can access the variable inside a struct using .\u00a0. . So for example. . Pixel p;. p.r = 1; # accessing r value"}, {"id": 2822, "value": "We unfortunately can't reveal any information about the private tests, but your final score will be the highest scoring submission (not necessarily the most recent one).\u00a0"}, {"id": 2823, "value": "What does your launch.json look like? Also, make sure that your .vscode folder and ppm files are in your project folder.. . Resolved. Student's solution:. \"Remaking a config seemed to fix it, I used the same exact config as the one in the picture.. . if you are getting a similar issue try closing and reopening VS Code and the project within it and remaking your launch.json \""}, {"id": 2824, "value": "You want to respect the interface and only use Matrix provided functions to access matrix's height and width"}, {"id": 2825, "value": "That is your score on the public tests. You get your final score after we run your code on private test cases and publish it."}, {"id": 2826, "value": "I suggest running your code with Perf on CAEN."}, {"id": 2827, "value": "I suggest revisiting the spec and carefully reading the description of this function as well.. . The seam for a specific row has to be calculated using the seam of the previous row."}, {"id": 2828, "value": "Your min initialization for Matrix_min_value_in_row() is incorrect. Remember that mat->data[column_start] does not translate to a (row, column_start) element of the matrix if the row != 0. I also suggest you utilize Matrix_at() in your Matrix functions instead of directly accessing mat->data."}, {"id": 2829, "value": "In Matrix_min_value_in_row(), your min initialization is incorrect. Think about what should be your initial min if you are trying to find a min in the range of [column_start, column_end)"}, {"id": 2830, "value": "This one works for me (*note* this is some random external site, use at your own risk)"}, {"id": 2831, "value": "Dog rotate not passing probably means you are not doing something correctly in Image_init(), Image_print(), and other functions that are called in rotate. I would set a breakpoint in rotate and try stepping into Image functions that it calls."}, {"id": 2832, "value": "I suggest running your code with Perf on CAEN."}, {"id": 2833, "value": "I suggest rewriting your code using Matrix_at().\u00a0. . Also is i % Matrix_width(mat) == 1 a correct indication for when you are at the end of a row?\u00a0"}, {"id": 2834, "value": "Hi Ethen, can you be more specific with what asserts you are failing, what line and which file?"}, {"id": 2835, "value": "I believe for this function you are supposed to use matrix_min_value_in_row rather than min()"}, {"id": 2836, "value": "You are failing some of your Image tests. Specifically, you are failing Image_print() and it seems like on the last line, you have a leading whitespace. I would use the debugger to investigate why this happens."}, {"id": 2837, "value": "I would make sure matrix_fill_border, matrix_column, matrix_row, and matrix_at are tested a little bit further. I also suggest testing the scenario that Matrix_column_of_min_value_in_row() you have to return the leftmost column if they are multiple mins.. . I would check cases for multiple max and min further as well."}, {"id": 2838, "value": "The idea of seam_carve_width is to shorten the width of the image. newWidth is your new target width."}, {"id": 2839, "value": "We haven't covered this in lecture yet, but if you create a dynamic array (such as with new int[]), you must delete it with \"delete[] arr\" (not with \"delete arr\"). However, in your seam_carve_width(), you shouldn't need to create a dynamic array. Instead, you can create the seam array normally with a sufficiently large size (is there a constant integer in Matrix.h you can use as the size for your seam array?)"}, {"id": 2840, "value": "This issue usually comes up from not working on the edges correctly. I would look at your functions especially ones that call Matrix_min_value_in_row() and Matrix_column_of_min_value_in_row() and see if it works as expected on the edges of the matrix.. . Use the debugger to inspect this. The best suggestion I have for you is attending office hours today."}, {"id": 2841, "value": "It looks like you're outputting the original image, rather than the modified one. At the end of remove_vertical_seam(), are you assigning the old image object to the new one?"}, {"id": 2842, "value": "I don't think so, as long as they don't fail the long line style test"}, {"id": 2843, "value": "At the end of remove_vertical_seam(), are you copying the old and new image pointers, or are you copying the actual objects? If you're doing the former, think about why this won't update the old image object with your new one, thus resulting in your output file containing the original image."}, {"id": 2844, "value": "Please follow this [syntax convention](https://stackoverflow.com/a/4029897/20997138). In fact, a standard array should work and it doesn't have to be a dynamic one."}, {"id": 2845, "value": "RME assertion statements are not graded. asserting the RME can be helpful for debugging purposes, though -- it can help you know if the values being passed into a function are wrong or the function itself."}, {"id": 2846, "value": "Your current test suite looks strong. I'm afraid I don't have any insight into the bugs you're missing, but I would revisit some of your smaller tests, and think about other types of \"interesting\" matrices you can try with them. For example, for tests that involve looping over the Matrix, make sure you're testing every meaningful type of Matrix shape (for example, I classify them as single-element (i.e. height and width are 1), square (height == width), and rectangular (height != width). And for testing functions that check the integer values in the Matrix, consider how you can create Matrices with \"interesting\" values; for example, how does Matrix_max() behave with a Matrix with all the same numbers? All negative? Mix of positive/negative?. . Thinking through these edge cases will better inform your test-writing."}, {"id": 2847, "value": "Your ASSERT_EQUAL statement is running with every iteration of the outer for loop. Did you mean to run it only after setting all the values in the Matrix?"}, {"id": 2848, "value": "See @10 for an explanation of this message. In short, it just means an optimization macOS tries to perform at the start of your program failed; this won't affect the correctness of your program. As long as your code works on the autograder, that's all we care about. To learn more about this message (and how to get rid of it), check out this Stack Overflow post."}, {"id": 2849, "value": "The leak occurred because you created a new Image object in your main function, but when you couldn't open dog.ppm, your program exited without deleting the Image object. This is acceptable behavior; you don't need to handle this \"leak,\" since all of your program's memory will be reclaimed by the operating system automatically when your program terminates, rendering the leak benign.. . The problem seems to be your output file is the same as your input file. These should be different filenames, right? Double-check your main function for this."}, {"id": 2850, "value": "Remember that arrays decay into pointers when passed into a function, so *seam is showing you the value of seam[0] (which probably hasn't been set by your loop yet, in the screenshot). To see all of seam's values, go up one function in the call stack, and you should be able to expand seam in the variables panel to see its elements."}, {"id": 2851, "value": ". How should I proceed? What May I be over looking?. . Can you explain a little bit more the motivation behind writing these functions? Can Image_get_pixel() and Image_set_pixel() help you for your case?"}, {"id": 2852, "value": "Please share your uniqname per @64 so we can take a look. . . I think this is because I am trying to take in \"dog.ppm\" is there a proper way to do this?. . dog.ppm is not part of your submission so auto grader cannot find this file"}, {"id": 2853, "value": ". Pretty sure compute_energy is working fine, it passed for dog.ppm in the public tests. . I am very suspicious of compute_energy, try it for crabster and horses. One thing to note is what should be the energy for elements on the edge?. . Debugging would be easier during office hours, so I suggest you try attending OH"}, {"id": 2854, "value": "Check the RME for each function. For example, the RME for remove_vertical_seam says \"// REQUIRES: img points to a valid Image with width >= 2 \". This means you wouldn't have to handle the case where width is <2 in that function. You should always consider what happens when you're doing the calculation on a border column, and this applies to the 2x2 case as well."}, {"id": 2855, "value": "Looks like you are pushing the original image into the output file. Take a look at dog.ppm, its the same as your output. It's hard to say why this is happening without seeing your code - is your remove_vertical_seam pointing the pointer to the new image?"}, {"id": 2856, "value": "you have to use ifstream instead. try ifsteam and if you see the error again please follow up here.. . Solution: delete your code project and make a new one"}, {"id": 2857, "value": "You need to make use of Image Print"}, {"id": 2858, "value": "The end column is exclusive. If you get segfault, you may want to check outside these two functions, how you called them. For example, if you happened to switch the height and width, and passed in the wrong value, you may get segfault."}, {"id": 2859, "value": "Mark as resolved."}, {"id": 2860, "value": "Nope. See line 239 of your processing.cpp. You allocate memory there, but where is the associated delete?"}, {"id": 2861, "value": "Please add your uniqname to your profile as per @64, so we can review your AG submit."}, {"id": 2862, "value": "Yes. You need to respect the interface in your test functions. Using helper functions doesn't qualify as breaking the interface though. Breaking the interface would be accessing private member variables in your tests (e.g. mat->data in matrix_tests.cpp). You do not have to use helper functions in test cases but they are helpful"}, {"id": 2863, "value": "The strategies you tried are very smart! Whenever something works locally but not on the autograder check for undefined behavior.. . I did look at your code and saw what might be causing the issue. Remember that the Matrix_min_value_in_row ending bound is exclusive! That means it won't analyze the column_end index given. For example if you wanted to search the first two columns in a row (aka columns 0 and 1). You would have to pass in column_start = 0 and column_end = 2. Make sure that any time you call the matrix_min_value_in_row you keep the exclusivity in mind.. . Hope this helps! Thank you for following the requested format!"}, {"id": 2864, "value": ""}, {"id": 2865, "value": "Please post your uniqname to your profile, as per @64."}, {"id": 2866, "value": "You didn't initialize the image through reading input from the file"}, {"id": 2867, "value": ""}, {"id": 2868, "value": "The long line check means line 17 has too many characters and you need to shorten it or split it into multiple lines. The long function check is what checks how many lines are in each function."}, {"id": 2869, "value": ""}, {"id": 2870, "value": "If you haven't already, I'd look at the RME's for the last 2 matrix functions and try to make some edge cases, especially relating the inclusiveness/exclusiveness of bounds.\u00a0"}, {"id": 2871, "value": "You can just make an ifstream. Then call ifstream.open(filename). This should work."}, {"id": 2872, "value": "You are allowed to test multiple things and have multiple asserts within  your test. However, it would make sense of each of your \"sub-tests\" within your test functions are logically similar."}, {"id": 2873, "value": "It will take the higher of the 2 overall submissions."}, {"id": 2874, "value": "Given that some tests passed, it seems like an edge of the matrix case, which is why the rest of the tests passed. I would suggest looking at your bounds as well as making sure that row and column correctly correlate to height and width.. . We currently are backed up on private posts asking for us to look at code so it would be very helpful included a list of the strategies you used to debug (as specified in @64). Good information might be what assertion is failing, where the assertion is coming from, and parts of the function you have already debugged as correct."}, {"id": 2875, "value": "I\u2019m not sure what you are asking, but for storing the new image, you can use ofstream and pass it into the Image_print() function.\u00a0"}, {"id": 2876, "value": "In the autograder it looks like your energy function is the one that's failing....your remove vertical seam looks fine. In the energy function, you shouldn't subtracting 1 from h. I would suggest using the Matrix_at function as it does those calculations and obtains the correct value for you so your implementation isn't as open to bugs."}, {"id": 2877, "value": "This section of the spec defines how you compute the energy (https://eecs280staff.github.io/p2-cv/#energy-matrix). The squared_difference function is given to you in the processing.cpp starter file."}, {"id": 2878, "value": "Check that whenever you have a new, there is an associated delete."}, {"id": 2879, "value": "Great question! Typically what would be different is the size of the image. Dog is a square and crab and horse get more rectangular. If you mixed up your rows and columns somewhere, it may not be that impactful in a small square but would make a huge difference in a rectangle (you may even go out of bounds).. . Another key difference that comes into play more in the remove vertical seam is the seam remove is different for each image. One image may remove only middle pixels while one image may remove some from both edges and middle."}, {"id": 2880, "value": "In your first screenshot you are very close to the correct answer! You only need the first for loop and the two nested ones. I love the very first nested for loop. It catches all the cases where the column is less than the removed column. The second nested for loop has the correct condition...it handles all the columns that are greater than the removed seam. The only bug is, you get the pixel from (r,c) and set it in our new image at (r,c). Since you are removing a pixel, you are getting rid of a column so it will be offset by one. Try setting the pixel in the new image at (r, c-1)."}, {"id": 2881, "value": "You\u2019re accessing undefined memory on line 184 of your processing.cpp"}, {"id": 2882, "value": "Assertion error means that your implementation breaks the requirement of the functions. For example, seam_carve() requires \"0 < newWidth <= Image_width(img)\", but if the newWidth you passed into the function is bigger than original width, you would have assertion error. The next step is to check outside this function, and think why and at which step you happen to pass in a wrong newWidth. For example, if you accidentally switched the newHeight and newWidth before/when you call this function, this requirement might be broken.. You may want to apply similar strategies to all the assertions that you failed, and update your code accordingly."}, {"id": 2883, "value": "I would recommend stepping into the Image_equal function with your debugger to see what is differing. That will help you trace down the issue. diffchecker.com is also a good way to narrow an issue."}, {"id": 2884, "value": "This is expected behavior. You are just creating a new file with your own name, which doesn't necessarily need to be \"dog_4x5.out.ppm\". (You can type \"dog_whatever_you_want.out.ppm\" as the name of the output file, and your code should still work)."}, {"id": 2885, "value": ""}, {"id": 2886, "value": "Usually the public test cases are used to check that your code can \"compile\" but doesn't guarantee the correctness of your code. However, for processing specifically, it would be very difficult to create your own general test cases (create your own image by generating hundreds of pixels, and calculate which columns or rows to remove, and compare if it is correct). But yes if you really want, you can definitely test your functions individually (not integration tests) by for example, creating a simpler Matrix cost, and provide your own seam, and call find_minimal_vertical_seam(), and see if the results look right."}, {"id": 2887, "value": "Try compiling and running with the address sanitizer.\u00a0 See https://eecs280staff.github.io/tutorials/setup_asan.html. . Segfault means you have bad access. For example, like the student said, argv may trigger this error. However, it is also possible that during seaming process, you happen to access some elements that are outside the valid range of the image or matrix. You may want to use your debugger and track the execution step by step to find out at which step you got this error so you know which function might be buggy."}, {"id": 2888, "value": ""}, {"id": 2889, "value": "Hint: Note that get pixel takes in an image, row and column.\u00a0"}, {"id": 2890, "value": "On what line are you failing?"}, {"id": 2891, "value": "Try compiling with the sanitizer flags.\u00a0https://eecs280staff.github.io/tutorials/setup_asan.html"}, {"id": 2892, "value": "Run make style on CAEN to be sure. Personally, I suggest breaking them up into multi-line comments just to be safe.\u00a0"}, {"id": 2893, "value": "I would walk through this test case with your debugger, stepping into the image equal function. Highly likely that an attribute of the image is different such as the width or height.\u00a0"}, {"id": 2894, "value": "Hard to tell without looking at your code. Please either making a private post or come to OH."}, {"id": 2895, "value": "Are you failing the public vertical seam test? If so, what is the differing output?. . Edit: Imagine a sample image with width 5, and for one of the rows, the index of the column that you want to remove is 3. For your code, you did copy the pixels of column 0, 1, 2 to new image, and the corresponding pixel column indices are 0, 1, 2. However, notice that when you code runs into \"else\" (col==3), you did nothing but set skip to 1. For the next round of for loop, your col will be 4. Then for your if statement, you actually copy the pixel of column (4+skip) which is 5 to new image pixel of column 4. Is this what you expected? You actually want to copy old image column 4 to new image column 3. This is why your function is not working properly.. For debugging tips, you should be able to check the difference between your own image with the correct one, and find out that the next column of the seam column is missing, and then find out where the bug is. Normally we are not expected to tell students which part of the code is wrong directly."}, {"id": 2896, "value": "Marking as resolved"}, {"id": 2897, "value": "Hard to tell without seeing your code. Please either make a private post or come to OH.\u00a0"}, {"id": 2898, "value": "column_start is inclusive and column_end is exclusive, so for your case, the two parameters would be 0 and 1. You may also notice that we have the same inclusive and exclusive requirement for Matrix_min_value_in_row()."}, {"id": 2899, "value": "There shouldn't be a \"cout << endl;\" between the for loop declarations (aka between for i = 0.... and for x = 0......)."}, {"id": 2900, "value": "Value would be greater than 0, hence why you\u2019re failing your first test case.\u00a0As for the second test case, I would advise you to read the RMEs of the matrix function regarding inclusive and exclusive values.\u00a0"}, {"id": 2901, "value": "I would recommend walking through this test case with the debugger and seeing what values are being assigned to the image struct. The line you\u2019ve shown here seems correct here. I suspect you aren\u2019t using Matrix_init on all the channels that compose an image.\u00a0"}, {"id": 2902, "value": "For test_energy, if you check the public test case itself, you may find that the function compute_energy_matrix() is called. Therefore, any code that relates to this function might be buggy. You may want to compare your own energy txt with the correct energy txt file to find out what differences you have (for example, if the borders are incorrect, very likely the fill border function is buggy), and start debugging from there."}, {"id": 2903, "value": "Instead of int row, have long row and static cast your return as an int.\u00a0"}, {"id": 2904, "value": ""}, {"id": 2905, "value": "You probably need to make sure Image.cpp, Matrix.cpp, Image_test_helpers.cpp, matrix_test_helpers.cpp and processing.cpp are included in your build. More info on how to include/exclude files from build"}, {"id": 2906, "value": "Change cwd to ```${workspaceFolder}```. . Also, the name and debug parameters are not correct.. . Also, you want to make sure you have the c++ extension and select GDB when setting up the debugger. I suggest taking a look at the vs code setup"}, {"id": 2907, "value": "Have you used your debugger?"}, {"id": 2908, "value": "Yes"}, {"id": 2909, "value": ". My code gives the first two correct values for Seam for the dog public test but the rest seem to just be garbage values coming from somewhere else. How can I fix my code to actually input the correct values.. . Refer to the spec on how to calculate a seam based on the seam of the previous row, you are not having a correct range for your (column_start, column_end)"}, {"id": 2910, "value": "You are not allowed to access the data from the structs directly, you need to use the functions you created.. . . you probably access the data array directly , or width and height. basically anywhere you use mat->height or mat->width should be replaced by Matrix_height(mat) and so on\u00a0. . same for the data array. It might take some minor rewriting. Just manually review all the places you access mat->data and so on."}, {"id": 2911, "value": "check out @1210. . Besides giving ideas/hints we can't talk about the specifics of tests, so I encourage you to come to OH where we can give out more ideas"}, {"id": 2912, "value": "One thing I've noticed is that your else if (minCol == lastCol) expression never evaluates to true, since minCol is a column index and lastCol is one beyond the last column."}, {"id": 2913, "value": "Check the functions that are calling matrix_at and see if they are using the correct bounds. Note the RME for matrix_at and how row and column are zero-indexed."}, {"id": 2914, "value": "For all of these you're getting false positives?"}, {"id": 2915, "value": "Have you used your visual debugger?"}, {"id": 2916, "value": "No."}, {"id": 2917, "value": "I was getting a few of those errors too, check that your loops aren't going out of bounds since that was the problem for us."}, {"id": 2918, "value": "yes"}, {"id": 2919, "value": "You need to have Image *aux = new Image"}, {"id": 2920, "value": ""}, {"id": 2921, "value": "You will need to write more test cases to expose these bugs. Consider edge cases that arise as you read the spec and with the RMEs we provide."}, {"id": 2922, "value": "Have you walked through the test case with your debugger?"}, {"id": 2923, "value": "I think you are on the right track."}, {"id": 2924, "value": "Can you explain to me why the if condition you have is j == jeam[j]?"}, {"id": 2925, "value": "You don't need to consider those cases for this project."}, {"id": 2926, "value": "Note the requires clause: // REQUIRES: img points to a valid Image with width >= 2"}, {"id": 2927, "value": "Doing it in order from top to bottom is the common approach"}, {"id": 2928, "value": "you should print exactly what you stated in the cout statement above! no replacements."}, {"id": 2929, "value": "Marking as resolved"}, {"id": 2930, "value": ". #include <fstream>. do you have this at the top?"}, {"id": 2931, "value": "have you tried stepping through it with your debugger? it might be worth checking your matrix_max implementation as well. you could also try adding cout statements like cout << *Matrix_at(how,4,4); after the line you change it to see if matrix at is working"}, {"id": 2932, "value": "After everything has been calculated, then fill border with the max."}, {"id": 2933, "value": "You've most likely implemented one of\u00a0Matrix_fill, or\u00a0Matrix_max\u00a0incorrectly. Step through your code with a debugger and see where exactly the issue is. Also, make sure you remember to run\u00a0make\u00a0again whenever you make a code change.. . Also, please update your Piazza display name to include your uniqname. @64 has some steps on how to do that."}, {"id": 2934, "value": "Your main function is too long/complex, according to the style check. A classic solution is to split it into helper functions."}, {"id": 2935, "value": "Any of the argv arguments do not need to be put in quotations. So for line 28 it should just be:. . ifstream file(argv[1]);. Same for line 35"}, {"id": 2936, "value": "Please make a private post with your code or come to OH."}, {"id": 2937, "value": "Your whole grade is whatever you see in AG. It looks like your first 2 points sum most of it up, except there's also style checks and checks for respecting the interface. The style checks and respecting-the-interface checks are public. I highly recommend making a submit so that you can see how you're doing."}, {"id": 2938, "value": "@1244 might help"}, {"id": 2939, "value": "Precisely speaking, you know that the first thing to fail in the processing public tests is \"dog find seam\". Start by comparing `dog_seam.out.txt` and `dog_seam_correct.txt`. Then, step through the function that produced the incorrect seam value. Pay attention to the iteration of the loop where it produces the incorrect value. Where is that coming from? (In your case, it is `Matrix_column_of_min_value_in_row`.) How did it produce that incorrect value (in your case, 0)? You would need to fix something in that function (`Matrix_column_of_min_value_in_row`) to make it produce the correct value."}, {"id": 2940, "value": "Variable length arrays on the stack never really made it into the C++ standard because of complications with `sizeof` evaluation and templating parameters. Here, `MATRIX_HEIGHT` is a runtime constant---it might be different when you run it on different images, but every time the function runs, it can't be changed once the image-dependent number is set. What the language really requires here is a compile-time constant, or a \"constant expression\", a number that the compiler knows for sure and is used by the compiled program for all possible images. Therefore, we need a number that accommodates all the images we promise to accommodate. What's the maximum height of an Image? (Hint: what's the maximum height of a Matrix? How much space do we set aside for each Matrix?) To potentially accommodate input images that have that precise height, **we should set this to the maximum possible height of an Image**. For smaller input images, parts of the array just won't get used. That is fine."}, {"id": 2941, "value": "With resize.cpp, there are a limited set of edge cases, such as the number of arguments.\u00a0 I would just double check you are following all the expected behavior as outlined in the spec."}, {"id": 2942, "value": "Looks like your cost matricies aren't the same for the dog test case. There should be output files of your dog cost matrix and the correct dog cost matrix, so you can look at those and compare where they're different. This should point you to what's going wrong!"}, {"id": 2943, "value": "Yes, the minimum energy would be zero, if the N/S and E/W pixels were equal"}, {"id": 2944, "value": "As the student answer suggests, make sure you are running make clean then make <executable name> before running your debugger. What IDE are you using?"}, {"id": 2945, "value": "The istream should already be initialized to read from the proper file. You only need to use >> to read from it."}, {"id": 2946, "value": "You'll want to find the seam where the cost is minimized(and you have a cost matrix!)"}, {"id": 2947, "value": "Based off your latest AG submit, I would fix the issues that you have with your Matrix tests, since processing heavily relies upon the functions in Matrix."}, {"id": 2948, "value": "Using the perf tool will prove to be very useful here. See https://eecs280staff.github.io/p2-cv/perf.html on how to use it. Note: You must ssh into CAEN to use perf."}, {"id": 2949, "value": "Hint: consider the usage of Matrix_column_of_min_value_in_row"}, {"id": 2950, "value": "Nope, you do not need to consider negative RGB values as per the RME."}, {"id": 2951, "value": "How did you create your seam array? Make sure you're creating it to be long enough (i.e., the maximum possible seam length)."}, {"id": 2952, "value": "I would use your visual debugger to see what is happening on the final seam row."}, {"id": 2953, "value": "Please do not post your UMID. UMID is considered protected information under FERPA.. . I would recommend with your visual debugger to step into the Image_equal function and see what properties are differing. That will help you narrow down what the problem might be."}, {"id": 2954, "value": "As the student answer suggests, try running the test case with the address sanitizer and then with your visual debugger."}, {"id": 2955, "value": "Have you walked through the test case with your debugger?"}, {"id": 2956, "value": "Are you using the \"assert()\" function anywhere in your code? make sure that whatever you are asserting doesn't evaluate to false unless the \"REQUIRES\" conditions aren't met."}, {"id": 2957, "value": "As the student answer suggests. the style guide we have on eecs280.org covers this."}, {"id": 2958, "value": "I'd reccomend running address sanitizer so you can see if there's anywhere it flags for indexing out of bounds. Also, I'd reccomend using your debugger to make sure the values passed into the function are correct as well -- sometimes that can cause the error!"}, {"id": 2959, "value": "You want to use ifstream instead of istringstream for your second parameter passed into Image_init(). This will be similar to how in resize.cpp you initialize the image. Also, you can just have the filename; the \"~/\" is unnecessary."}, {"id": 2960, "value": "I notice column_end isn't being used in either function, can you explain why?"}, {"id": 2961, "value": "Autograder will tell you what line the assert is failing if you open Validity Output under the Matrix student tests tab. Here's yours:. . In ASSERT_EQUAL(Matrix_min_value_in_row(mat3, 0, 0, 1), 0), line 612:. 3 != 0. For an initialized, new matrix in which you have not put any values in it yet, there is no guarantee that the elements are all 0 by default.\u00a0"}, {"id": 2962, "value": "I believe there are 11 for Matrix and 13 for Image"}, {"id": 2963, "value": "Your seam index has to correspond to the row that you are calculating the min_value_in_row() for. So for example, seam[6] would correspond to row 6. Whereas in your implementation seam index = 1 corresponds to row = height - 2. My suggestion is that instead of using a variable for seam index, use i."}, {"id": 2964, "value": "Edit: This problem has been resolved."}, {"id": 2965, "value": "Can col ever equal width?"}, {"id": 2966, "value": "All your points come from the public style tests."}, {"id": 2967, "value": "It would be difficult for us to tell, the issue might be with your Matrix_init(), Image_width() or Image_height(). I will check those functions. Also, set a breakpoint on the line where this function is called, then step into the function and examine what the parameters are."}, {"id": 2968, "value": "Address sanitizer setup tutorials: https://eecs280staff.github.io/tutorials/setup_vscode.html#sanitizers."}, {"id": 2969, "value": "Just a suggestion, but for each of these sizes, are you calling and checking that each function works?"}, {"id": 2970, "value": "I would look into how you're reading values in for Image_init first."}, {"id": 2971, "value": "You should pass width first, then height when initializing using your Matrix_init()"}, {"id": 2972, "value": "Please put your uniqname in your piazza handler per @64 so we can take a look.. . . Are we supposed to delete pixels after we create them?. . You won't need to create your pixels dynamically. "}, {"id": 2973, "value": "I see you do *argv[4] to access argv[4], but you can do argv[4] to access that element (revisit this weeks lab for how to handle argv and argc). Also remember, this would be a string, so you have to change it into a number to compare it to an integer (look into atoi())"}, {"id": 2974, "value": "To make it return a const int*, you should also pass it a const Matrix*. To achieve this, you know you can't change the height and width of a matrix after it is created because Matrix_init() gets passed in a Matrix*.. . To make this work, it gets a little complicated (by using concepts outside of EECS 280). You won't need to test it to get 10/10 for matrix tests, but if you are interested, follow up and I will go into more details. I would encourage you to focus on tests for other functionalities.. . "}, {"id": 2975, "value": "Hi Ethan, the code is a little difficult to read in this format. I suggest you put your uniqname in your piazza per @64 so we can take a look on AG.. . In general, it's challenging for us to read code and be able to confidently say whether it works or not. What I would suggest it to set a breakpoint on the assert that it fails, and once it fails, look at the call stack (if you use vs code it will be on the lower left hand side of the debugger). That will tell you what function called it and what was the function before the assert failed.\u00a0. . The best way to solve this issue would be coming to office hours where we can work through the debugger to find the issue."}, {"id": 2976, "value": ". I am a bit confused about how to read a file using a fstream.. . Please use ifstream instead of fstream. . . What would I do next to actually read from the file into the fstream?. . As the notes say, using .open() for the ifstream variable you have and passing in the filename as an string would open the file. Your next step would be to initialize an image based on this file.. . "}, {"id": 2977, "value": "Please put your uniqname in your piazza handler per @64 so we can take a look at your AG submission.. . It would be more helpful if you make a private post with your code so we can take a look. I also suggest coming to office hours."}, {"id": 2978, "value": "Since this is duplicate, let's continue it @1219"}, {"id": 2979, "value": "Needs to be in quotes. \"\\n\""}, {"id": 2980, "value": "Test your matrix for prints or other operations where it's not a square.. . For functions that return a value in the matrix or a column, write tests where that value would be on the edges."}, {"id": 2981, "value": "Yes you would need to edit the make file. You can mirror the rules we have for matrix_test and adapt them for your own processing test cases. See\u00a0 https://eecs280staff.github.io/tutorials/make.html for additional resources on this. . . If you need further assistance on this, we will be more than happy to help!"}, {"id": 2982, "value": "What is `i` meant to represent? What is `row` meant to represent? Why are you writing `seam[i]` and not `seam[row]`?. . Also, I'm fairly certain that the assignment takes place, but because `seam` got passed in as a pointer (and your debugger doesn't know it represents an array), your debugger just shows `*seam`, or `seam[0]`. If you put `seam[i]` in the Watch section of your debugger (it's below all the variables, assuming you use VSCode) or in the [debug console](https://eecs280staff.github.io/tutorials/debugging_guide.html#evaluate-expressions), you should see that change."}, {"id": 2983, "value": "I figured out your root cause by debugging your submission locally. One shortcut for you to discover this cause is to add assertions for the REQUIRES clause in the two `Matrix_at` implementations. The function that passed out-of-bound rows or columns to `Matrix_at` has a mistake in it.. . Another hint: the public tests failed as soon as the image is no longer square (5x5)."}, {"id": 2984, "value": ". I am wondering if the image matrix must be larger than 3*3. Because the sepc didn\u2019t specify how to deal with matrix smaller than 3*3 when calculating energy matrix. Also, the cost matrix is based on energy matrix and the array seam is based on cost matrix. So can we assume the image matrix is larger than 3*3 for functions in processing.cpp?. . You can't make these assumptions. Your code should work for images of any size."}, {"id": 2985, "value": "That particular test actually failed because your `Image_init` didn't read in the correct 4x5 dog image correctly. I found your root cause, and it has to do with the fact that you can read square images fine (5x5 dog) but not non-square images (4x5). Check your `Image_init`. Maybe you got the width and height mixed up?"}, {"id": 2986, "value": "We cannot comment on what specific test case might catch a specific bug. All I can recommend is that you continue to make test cases, testing edge cases that derive from the spec and the RMEs in the functions."}, {"id": 2987, "value": "That means your tests expose 8 bugs in the mutation tests not your code. This is a good thing, and the more bugs you expose the more thorough your tests are. You also need to expose 10 for full credit."}, {"id": 2988, "value": "You would want to first check the number of arguments and error out there, then the file name."}, {"id": 2989, "value": "Your function for finding the cost of the image is giving the wrong value in the public tests. You can run the public tests locally on your machine (by doing make test) to see what exactly is failing."}, {"id": 2990, "value": "Matrix_at needs to be passed in a column number. You can iterate through the columns in a row and keep track of the lowest value you see."}, {"id": 2991, "value": "Have you tried walking through the test case with your debuggger?"}, {"id": 2992, "value": "I found your root cause on your latest autograder submission using **conditional breakpoints**. Here's what you (and others encountering problems that look similar) can do:. . - Familiarize yourself with conditional breakpoints [here](https://eecs280staff.github.io/tutorials/debugging_guide.html#conditional-breakpoints).. - Find the first number in your program's output that does not match the corresponding number in the correct output.. - Set up a conditional breakpoint where the condition is \"we found that first incorrect number\", like `cost == 10839`.. - Debug the program. It should stop at the conditional breakpoint where your first incorrect number was determined. Figure out how the incorrect number came to be by inspecting the variables and thinking through your logic. If you're in VSCode, you can add expressions to the \"watch\" pane between \"call stack\" and \"variables\" to evaluate them. For example, you can add the expression `*Matrix_at(cost, r-1, c-1)` to the Watch section and see what it evaluates to.. . In the author's specific case, there was a suspicious constant in `Matrix_min_value_in_row`. All the costs were greater than 10000. What would happen in this case?"}, {"id": 2993, "value": ". . . . . . I was unsure on what this error meant and how to fix it? Does anyone know what this means or how to fix it?\u00a0. . . . . . . You have a memory leak in your resize.cpp on line 17. This means you created a new object with the new keyword but forgot to delete it."}, {"id": 2994, "value": ". . . I think this happens because of the constants? in my function but I'm not sure how I can either get rid of those or change to get the right values.. . . . I suggest using Image_get_pixel()."}, {"id": 2995, "value": "Please remove return 23. You want to return non zero number only in case you encounter an error. If your program finishes with no errors, you either want to return 0 or omit to return anything.. . If we cannot run the public test, you won't get the point so in this case yes you won't get the point."}, {"id": 2996, "value": "It seems like you lines exceeding 90 characters in Matrix.cpp at line 67, processing.cpp line 101 and 163, resize.cpp at line 78. You can move the characters after 90 columns to the next line.\u00a0"}, {"id": 2997, "value": "Please check @1140 and continue our discussion there. After you resolve the debugger set up issue, continue with the suggestion of debugging this function."}, {"id": 2998, "value": "This is a good question. Your program should still work if either or both dimensions for the image is 1.\u00a0. . . then it would break the functions because the bounds of some of our nested loops are set to width/height - 1. . If your for loop starts at 0 (or 1), since it should end at width - 1 = 0 in this case, it will immediately terminate the for loop. If this is not what is happening, I suggest carefully looking at your code and see how you can change your for loops (as an example, there might be more things to look at). I can tell you that you won't need to consider this as a standalone edge case if your functions' implementation closely follows the spec."}, {"id": 2999, "value": "I have the same issue. Did you end up fixing it? I tried excluding all files but one yet I still get build errors which is weird. Please let me know, thanks.\u00a0"}, {"id": 3000, "value": "Make sure that you are running your code through linux, and not your normal cmd.\u00a0"}, {"id": 3001, "value": "Nevermind, I figured out what was happening and have fixed the error.\u00a0. Sorry for the hassle- not sure how to delete this post :)"}, {"id": 3002, "value": "That is normal."}, {"id": 3003, "value": "Where does the output differ? The `data` shown in your debugger are just the values stored in your red_channel matrix but not your whole image."}, {"id": 3004, "value": "Go to Product > Scheme > Edit Scheme and set the working directory to be the folder you have your project code on"}, {"id": 3005, "value": "Hi Kai, I changed your post to private because I felt like it talks about the specifics of implementation.. . It is not easy to know what exactly is going wrong. I suggest you set a breakpoint on top of the function, and try debugging to see if you see anything that is off.\u00a0. . Also, post your code for the function here so we can take a look. I should say that these sorts of problems can be solved easier during office hours, so I suggest going to OH."}, {"id": 3006, "value": "Can you try using diffchecker.com, or similar diff checking service for those two files?"}, {"id": 3007, "value": "It looks like you are not performing deletes where necessary, hence you are leaking memory."}, {"id": 3008, "value": "We can't strictly say what type of test case would expose what specific bug. All we can say is that you should continue to write test cases, looking for edge cases in accordance with the spec and the function RMEs."}, {"id": 3009, "value": "There are few things for you to try:. Set up address sanitizer to detect undefined behaviors. You are most likely going out of bounds (maybe in calculating the vertical seam).After resolving the issues from undefined behaviors, try running your code on caen using perf to tell you where in your code you have inefficiencies. I also suggest having an address sanitizer set up on CAEN."}, {"id": 3010, "value": "I don't think it's necessarily a problem with your image_print(). You could set a breakpoint in image_print() and step through your code. Especially pay attention to what values are stored in img right before it starts printing. If all values are indeed 0, then the problem is somewhere else. If \u00a0img does have the correct values, then feel free to post a follow-up."}, {"id": 3011, "value": "Make sure that you pass in the arguments necessary for resize to Xcode. To see how to do that, check it here. Remember not to include the program name (./resize.exe) in your arguments.\u00a0"}, {"id": 3012, "value": "You're on the right track. You're currently trying to get and print the same pixel 3 times. However, you should be printing each value (r, g, b) of the single pixel. The call to\u00a0Image_get_pixel\u00a0gives you a\u00a0Pixel struct. You just need to print the 3 values in that Pixel in order."}, {"id": 3013, "value": "You're using an\u00a0fstream\u00a0instead of an\u00a0ifstream. If you make that change, then I think the issue will be resolved.. . Explanation (if you're interested): Using an\u00a0ifstream\u00a0uses read access for a file, while\u00a0fstream\u00a0also request write access. For obvious reasons, we don't want you to overwrite the image files, so write access if denied, and AG tells you it can't open the file."}, {"id": 3014, "value": "\"False positive\" means that the test case fails when run with a correct solution, meaning there's an issue with some of your assert statements.. . In line 300 of your Matrix_tests, I believe the correct output of the function would be 1, not 4 (because column_end is supposed to exclusive from the RME, so we really should be looking at columns 0-3, inclusive).. . Similarly, in line 382, I believe the correct output should be 12, not 9, for the same reason."}, {"id": 3015, "value": "When you compute the energy value, that means for that specific element in the energy matrix, you have to set its value to be the calculated energy. I also see you accumulate the energy value, but for each iteration, it has to be reset and calculated for that specific column and row."}, {"id": 3016, "value": "Your general tasks in resize.cpp are (per spec):. Read in the argumentsCheck for errorsCreate an image based on the given ppm inputResize the image -> seam carve will resize the image based on the input width (and potentially input height)Create the resized image based on the given ppm output. "}, {"id": 3017, "value": "This is fine, I personally cannot think of a different way."}, {"id": 3018, "value": "I suggest that you try running your program on CAEN with perf. Perf will tell you if your code is hanging or slow. We have tutorials for both of them: CAEN tutorial, Perf tutorial"}, {"id": 3019, "value": "The error is complaining about multiple definitions of functions based on your resize.cpp. This can happen when you #include a .cpp file, so make sure that any of the modules you want to include are done with the .h files."}, {"id": 3020, "value": "This occurs when there is a memory leak in one of the modules for this project. I would recommend fixing any UB checks on the autograder that are failing due to memory leak, and this error should go away. Additionally, you can use address sanitizer to test that you fixed the memory leaks locally."}, {"id": 3021, "value": "Recall that there is no function in C++ to directly return how large an array is. The sizeof() function returns how much space in memory an object takes up, not how many elements are in a container.. . I would not worry about asserting any requirements for the size of the seam array."}, {"id": 3022, "value": "Often times, heights and widths initialized to weird values are the result of issues in the init functions. I would use the debugger to step through your Image_init(Image* img, std::istream& is) function during that processing public test, or write some more tests for that function to try to narrow in on the source of the bug."}, {"id": 3023, "value": "Hi Simone!. . I would take another look at the conditions you use within your nested for-loop in your\u00a0remove_vertical_seam function. When do you want to copy a pixel from the original image to newImg and when do you want to skip the pixel?. After you have skipped the seam pixel, what row and column do you want to read pixels from in the original image and what row and column should we write to in\u00a0newImg?. "}, {"id": 3024, "value": "I would reference @69 for help debugging this issue on XCode. Specifically, make sure that you are not including multiple files with main functions in your build sources.\u00a0. . If this does not fix the issue, please follow up below!"}, {"id": 3025, "value": "assert_equal() is kind of a shorthand for ==, so it can only compare types that are comparable with ==. Since structs don't apply to ==, you can't compare Pixel using it. you'd have to access each member variable individually to compare the two or use Pixel_equal from Image_tests_helpers.h"}, {"id": 3026, "value": "On line 193 of your image_tests you're comparing pixel equality, but the testing framework doesn't know how to directly compare pixels using == since they're a custom struct. Instead, use the given helper function Pixel_equal() for pixel equality and assert() that it's true."}, {"id": 3027, "value": "Check the condition in your outermost for-loop. Remember that remove_vertical_seam\u00a0only removes a column from the image, it has no effect on the image height."}, {"id": 3028, "value": "Hint: You don't need to modify the data that the original image points to."}, {"id": 3029, "value": "What parameter tells you how many arguments have been passed in?"}, {"id": 3030, "value": "Have you tested your code on CAEN? CAEN is extremely similar to the AG environment."}, {"id": 3031, "value": "As discussed in lecture, the size of an array must be known at compile time. What is the maximum size of a seam that can be removed from an image?"}, {"id": 3032, "value": ""}, {"id": 3033, "value": "Per the spec, \"You should copy into a smaller auxiliary\u00a0Image and then back into the original, because there is no way to change the width of an existing image...\u00a0. To remove the seam, copy the image one row at a time, first copying the part of the row before the seam (green), skipping that pixel, and then copying the rest (orange).\". . Original. . Seam Removed. . If you're just using an algorithm to write each row into a new image, do you need to do anything with those cut pixels? For that matter, what should happen to the original image?"}, {"id": 3034, "value": ". Hi, we were wondering if we needed to use image_set_pixel() in the image_init function (the one with istream to initialize pixels) or if we just needed to put the values in the three different color matrices.. . You can do it either way whichever makes most sense to you.. . . We were also wondering if we should use matrix_at() in image_set_pixel()?. . Sounds reasonable to do so"}, {"id": 3035, "value": "Can you please add your uniqname to your profile as per @64 so we can see your AG submit?"}, {"id": 3036, "value": "Note that img is being passed by value, not by reference. So setting the pointer to be another pointer in this context is somewhat meaningless. Deferencing img and setting it to be equal to the data of aux is acceptable. When you do delete aux, that deletes the underlying data aux is associated with on the heap."}, {"id": 3037, "value": "You are generating incorrect output which is why you are failing this assertion statement. I'd recommend using your debugger to see what is happening here."}, {"id": 3038, "value": "As discussed in lecture, array sizes need to be known at compile time. What is the max number of rows an image can have?"}, {"id": 3039, "value": "You've discussed two cases for the minimum vertical seam. I.E you're current column is one of the middle columns, or you are at the right most edge. How is the case when you are on the right-most edge different than if you're on the left-most edge?"}, {"id": 3040, "value": "I'd recommend walking through these test cases with a debugger. Hard to tell exactly why you might be failing a specific test case without further info."}, {"id": 3041, "value": "Are you on macOS?"}, {"id": 3042, "value": "Note that a regular image pointer can be passed into a function that takes in a const image pointer."}, {"id": 3043, "value": "We can't reveal the contents of the private tests, but they are not guaranteed to be limited to horse, dog, and crabster.. . You can maximize your chances of passing the private tests by writing comprehensive test cases for Image and Matrix and making sure your code passes the public processing tests.\u00a0. . To check if your output is correct, you can run\u00a0diff on the output files or you can\u00a0make test and check if everything passes.\u00a0"}, {"id": 3044, "value": "Please include your uniqname, not your UMID (UMID is in fact considered sensitive information per FERPA guidelines).. . Hard to tell why you are having these errors without more information. Feel free to make a private piazza post or come to OH>"}, {"id": 3045, "value": "Matrix_width and Matrix_height needs const Matrix* mat, but you passed a const Image* to it.. . . . "}, {"id": 3046, "value": "This might be a bit difficult to resolve on piazza, I suggest you come to office hours for this issue.. . If you fail the rotate test, I would look carefully at functions such as Image_init() and Image_print() and the function they call. You can set a breakpoint in these functions and try debugging it."}, {"id": 3047, "value": "I would suggest setting a breakpoint inside of compute_vertical_cost_matrix() and step through it to see if at any instance you pass in a column that will violate the assertion."}, {"id": 3048, "value": "Hard to specifically point out what test case might expose what bug. All we can recommend is to continue to write test cases and reason about edge cases based off the spec and function RMEs. "}, {"id": 3049, "value": "As the student answer suggests, you are leaking memory. Every new should have an associated delete."}, {"id": 3050, "value": ""}, {"id": 3051, "value": "If you cannot get what lives in the seam array from the local variable window, you may choose to print out the elements in the seam array (for example, if dog has height 5, you can expect that seam array should contain 5 valid elements, so write a for loop to check the five elements after you set up seam). Then you can compare what differences you have between the correct seam array and your own seam array."}, {"id": 3052, "value": "Check on the auto grader report for your incorrect submissions if it says memory leak anywhere. If it does, this just means your code uses new in places and does not have corresponding deletes. If it doesn't, I recommend running through the public tests on your computer with a debugger, to see where your code crashes, and go from there."}, {"id": 3053, "value": "Here are some posts with ideas: @960 @1015. . Make sure you are calling every single method in your tests, and try to think of edge cases (1x1 matrix, max size matrix, etc.)"}, {"id": 3054, "value": "The only advice we can provide is keep trying! General things to check are: 1) Did you wrote test case for each and every function you wrote? 2) Can you think of edge cases for each function? 3) Create different types of Matrices! Small one, big one, identical ones, etc. It's not about the quantity of test cases you wrote but quality.\u00a0"}, {"id": 3055, "value": "The second column which says self is how long that particular function is taking. For instance of seems like matrix max is taking 30% of your total runtime. Matrix at,  height, and width also seem to be taking quite long. You should probably look into those functions first and see if you can optimize them."}, {"id": 3056, "value": "Also, you can't access the width like that, or any other member like that outside of the very function that struct is defined in; it's not respecting the interfaces (the autograder marks points off for this). You need to call the function that accesses the width of img to use it."}, {"id": 3057, "value": "As the student answer suggests, having assert statements is not required. Assert statements can help ensure you\u2019re passing in expected input into a function and help you debug more easily. I.E if an assert statement fails in matrix row, you know either your test case was incorrect or some other member variable of mat was not properly set.\u00a0"}, {"id": 3058, "value": "As the student answer suggests, you are leaking memory. Check that every new has a delete associated with it.\u00a0"}, {"id": 3059, "value": "You can catch up to 13.\u00a0"}, {"id": 3060, "value": "Image_set_pixel() gets a pointer to an Image, and img is already a pointer to an image, so you can simply pass img into Image_set_pixel"}, {"id": 3061, "value": "Yes, you can use Assert_equal() to confirm it has been set to the correct height and width. You can also use Image_get_pixel() to confirm all pixels have been correctly initialized based on input.. . How you use the testing helper functions is up to you, based on what you are trying to test."}, {"id": 3062, "value": "It can be difficult to solve these kinds of issues on piazza. Please post your code for finding the vertical seam, so I can take a look. I suggest coming to office hours for problems of this nature."}, {"id": 3063, "value": "Can\u2019t really help without seeing where the specific error is, but oftentimes this is due to an extra semicolon: for example. . . int method(int x); . {.   //stuff. }. Would cause this error, because there is an extra semicolon on the first line which needs to be deleted.. . This can also happen when declaring a class\u2026 etc.. "}, {"id": 3064, "value": "You can't create an array with a not fixed size (the size has to be a number). There are two solutions to this, discussed here @782. "}, {"id": 3065, "value": "Please include your uniqname, not your UMID in your profile as per @64.. . Have you tried using the visual debugger for this test case?"}, {"id": 3066, "value": "Sorry that was a careless mistake and I found the solution. Now, it gave me segmentation error over and over again :(\u00a0"}, {"id": 3067, "value": "You have not set up your dynamic array correctly. That seems to be the root cause. This is how you create a dynamic array:. . \u00a0int *array = new int[size];. . Also remember that it has to be deleted with delete[] keyword, so:. . delete[] array;"}, {"id": 3068, "value": "You can set up your project in CAEN and run make style to ensure you pass our styling guidelines.. . I would try to break up the main() function into multiple functions if it is long."}, {"id": 3069, "value": ""}, {"id": 3070, "value": "Changed this into a private post. Please post your code so we can take a look"}, {"id": 3071, "value": "You can use Perf on CAEN."}, {"id": 3072, "value": "Note that in the input stream, based off the PPM file format, you have the image dimensions as a part of the format."}, {"id": 3073, "value": "In your for loop, it looks like you never modify seam, hence why your seam would never change."}, {"id": 3074, "value": "Difficult to tell without seeing your code. I'd recommend using a debugger and walking through your test case and then following up with a private post or by coming to OH."}, {"id": 3075, "value": "Yes, if you are on the leftmost of the grid, then you should find the min of col and col+1. Similarly, if you are on the rightmost of the grid, you should find the min of col-1 and col.\u00a0"}, {"id": 3076, "value": "Try calling Matrix_init on the 3 channel matrices in Image_init before the double for loops \u2014 this seems to be a common error (you should initialize the Matrix objects before operating on them). Also, why are you reading into trash and then trash2 in the beginning? There is only one piece of junk in the beginning (\"P3\"). See if any of those suggestions work!"}, {"id": 3077, "value": "No that would violate the interface"}, {"id": 3078, "value": "You just need &mat->data[index] in your return statement."}, {"id": 3079, "value": "If you know your current column is either 0 or width - 1, would you agree that these are special cases that you can have if statements for?\u00a0"}, {"id": 3080, "value": "You want to set one pixel, and each pixel has three colors associated with it. Each image has also three channels (matrices) associated with it. One pixel represents one element in the image. Your guess about calling Matrix_at() is correct. Think about what matrices you want to set a value to and what values."}, {"id": 3081, "value": "You gotta make and destroy an image struct somewhere in this function!. . . And then just copy them back! A hint would be to look at the implementation of the rotate right or rotate left function as they also copy the image over!. "}, {"id": 3082, "value": "No, only using them in `seam_carve_height` is sufficient. They just help you to write less code in `seam_carve_height`."}, {"id": 3083, "value": "I hope the \"REQUIRES\" clause in `image_init()`/`matrix_init()` function will give you a hint."}, {"id": 3084, "value": "To initialize the seam array, you should use the constant `MAX_MATRIX_HEIGHT` defined in `matrix.h`. The length of the array must be fixed at the compiled time. `img->height` might not be known at the compiled time so that's why it gives you the error."}, {"id": 3085, "value": "When initializing ptr, it has to point to a const int object. For example, you could say const int *ptr = &height; where height is an int object."}, {"id": 3086, "value": "No you don't need image_fill() in your processing.cpp."}, {"id": 3087, "value": "It\u2019ll be hard for an instructor to pin point what bug would exactly be exposed by a certain test case. My recommendation would be to continue to write test cases and thinking about various edge cases in reference with the spec and the RMEs.\u00a0"}, {"id": 3088, "value": "resolved"}, {"id": 3089, "value": "It shouldn\u2019t take more than 30-45 seconds.\u00a0"}, {"id": 3090, "value": "A followup... is there a way to test seam_carve_width as opposed to seam_carve ? The issue could also be in one of these two (my implementations):\u00a0. . void seam_carve_height(Image *img, int newHeight) {. \u00a0\u00a0. \u00a0 rotate_left(img);. \u00a0 seam_carve_width(img, newHeight);. \u00a0 rotate_right(img);. \u00a0\u00a0. }. . void seam_carve(Image *img, int newWidth, int newHeight) {. \u00a0\u00a0. \u00a0 seam_carve_width(img, newWidth);. \u00a0 seam_carve_height(img, newHeight);. . }"}, {"id": 3091, "value": "You should be writing your own processing test cases. Passing the public test cases doesn\u2019t mean you will pass the private test cases for processing.\u00a0"}, {"id": 3092, "value": "Double check your `find_minimal_vertical_seam` function, your seam array produced in this function is wrong."}, {"id": 3093, "value": "You shouldn't need to add any function stubs to the Matrix_tests files. It looks like these are causing a compile error on the autograder."}, {"id": 3094, "value": "From your Autograder submission it seems like you have some memory leaks. Make sure to fix those as it could be the cause of the undefined behavior! Also you can try to run your code on CAEN as that is a more accurate portrayal of the Autograder than your personal machine."}, {"id": 3095, "value": ""}, {"id": 3096, "value": "Performance issue: You use a for loop for your Matrix_at() calculations. This will cause a performance issue for you. It can be achieved by pointer arithmetics (from lab 3). Look at the 1-d array and 2-d matrix on spec, and try to do a couple of examples of translating what the index of the 1-d array would be in terms of row and column for a matrix.\u00a0. . There's also a bug on line 53 of resize.cpp. . seam_carve(img,desired_width,Image_height(img));. Here, you never consider desired_height for seam_carve(). "}, {"id": 3097, "value": "Can you try mat->data, it returns a pointer to first element in data?. I wonder if its doing the operations in &mat->data[0] in a different order than you expect."}, {"id": 3098, "value": "I would think of it as initializing a new matrix with the correct dimensions, and going through the old matrix and copying the values that are needed into that matrix.. . Then once you are done you can set the old matrix to the new matrix, and delete the new matrix."}, {"id": 3099, "value": "You might want to consider using a while loop in this instance. If you have an old height you might want to loop until the old height is equivalent to the new height."}, {"id": 3100, "value": "Remember that Matrix_at returns a pointer, not an integer. You might want to dereference the call to Matrix_at."}, {"id": 3101, "value": "Have you tried using the debugger for this test case?"}, {"id": 3102, "value": "For processing.cpp, from the spec - so you could do the bottom two. "}, {"id": 3103, "value": "It means you have deleted a pointer twice, which causes a double-free error. Whenever you dynamically allocate some memory with new, you need to free(delete) that piece of memory after your use. And it should be freed exactly once.. You could set a breakpoint and step through your code to see where you called\u00a0delete\u00a0on a pointer that had already been deleted."}, {"id": 3104, "value": "Can you post a screenshot around line 70 of your processing.cpp?"}, {"id": 3105, "value": "No, as stated by the \"REQUIRES\" comments, \"seam points to an array\", so you do not need to check if it's null."}, {"id": 3106, "value": "Yes, this is correct. The third to last argument is the name of the file that resize will output to. If it exists, it overwrites the file, but if it doesn't, it creates a new one."}, {"id": 3107, "value": "It is just written like that to explain, that isn't actual code.. . Let\u00a0(r,c) be the element in the\u00a0rth row and\u00a0cth column. It is saying that cost of (r,c) is equal to the energy of\u00a0(r,c) plus the smallest cost out of the three elements above\u00a0(r,c). The three elements above should already be initialized because you are moving \"down\" the array (\"down\" in quotes because the array is really 1 dimensional)"}, {"id": 3108, "value": "The elements of the matrix that you do not manually set are not equal to zero, but rather have undefined behavior. Different computers can initialize ints in arrays differently, and while your computer gives a default value of 0, the autograder gives a different default value.. . You need to either initialize your array with 0's when you create it, or use Matrix_fill to fill it with 0s in the beginning of the test case.. . See @681 for an instructor answer about this."}, {"id": 3109, "value": "All of the style requirements are at the bottom of each Autograder submit. We don't hide any style guidelines from you in any project in this course, the Autograder will always tell you if you have a style issue."}, {"id": 3110, "value": "It looks like you are in the correct directory, but make sure that you pluralize test!. . ```. make Image_public_tests.exe. ```"}, {"id": 3111, "value": "Typically time out means you probably use too many loops or nested loops when you don't actually need them.. For your case, I see that you used nested for loops for image_get_pixel() and image_set_pixel(). Think about which function you may call inside these two functions to access the element of the given row and column \"directly\". This should save you a lot of time."}, {"id": 3112, "value": "I would say add\u00a0cout statements in\u00a0seam_carve_width and\u00a0seam_carve_height to see how many times those are called. If I remember correctly,\u00a0seam_carve_width should be called 4 times and\u00a0seam_carve_height should be called 10 times."}, {"id": 3113, "value": "Having the `string PPM` was a great idea to read in the \"junk\" value of P3. However, remember that the format of this particular type of ppm file is P3, then width and height, *then 255*, and then we get to the pixels. It doesn't look like you're reading in the \"junk\" value of 255 and instead treating that as a pixel value."}, {"id": 3114, "value": "This application allows you to convert and view PPM files if I remember correctly: https://www.gimp.org/. . Also, I haven't personally tried this out but this repository can do something similar: https://github.com/oalejel/resize-GUI. . I think it only works on Mac though."}, {"id": 3115, "value": "Have you walked through this test case with the debugger?"}, {"id": 3116, "value": "Here is an example from\u00a0processing_public_tests.cpp of how it is used:. . What they do here is they load_seam from the seam output file, and then compare it to what the correct seam should be. Though you could also do this by just creating a stream with the correct seam and then comparing it to the file.. . Also, you don't have to use every helper function if you were wondering."}, {"id": 3117, "value": "The energy of the pixel is given by the equation energy(X) = squared_difference(N, S) + squared_difference(W, E) as given in the specs. The code for squared_difference is at the top of processing.cpp and involves subtracting the red of the first pixel from the red of the second and squaring it. This is repeated for green and blue and then all three values are added together and divided by 100."}, {"id": 3118, "value": "This is certainly a weird issue but the Autograder is always the ground truth. I'm not sure why your machine is saying that you failed the tests when the Autograder says something different. Maybe try running the code on CAEN?"}, {"id": 3119, "value": "You could just move half of it to a new line, like so:. "}, {"id": 3120, "value": "Hard to tell without any context of the test case. Please make a private post or come to OH to this discuss this further."}, {"id": 3121, "value": "make test is actually telling you that there is no difference between dog_4x5.out.ppm and\u00a0dog_4x5.correct.ppm, since there is nothing returned after the command is run (both in\u00a0make test and in your manual run of\u00a0diff.. . When\u00a0diff doesn't return an output, it means there are no differences, so you're good."}, {"id": 3122, "value": "Make sure you initialize each of the channels within an image with the correct dimensions."}, {"id": 3123, "value": "You should be able to."}, {"id": 3124, "value": "There should be no return value for this function. When you are debugging, can you see the seam values as you're stepping through line by line in this function?"}, {"id": 3125, "value": "Segmentation fault normally means you're indexing out-of-bounds somewhere. Your personal computer may just not be listing an error when you run into the issue.. . To debug on CAEN, you could try to use the Remote-SSH VSCode extension to ssh into CAEN and run your normal VSCode debugger."}, {"id": 3126, "value": "You can assume that yes. The point of abstraction is that you can rely/assume upon the correct implementation of something else."}, {"id": 3127, "value": "There are two image init functions. The first one should be quite straightforward since you're assigning data to width and height and the matrices of the data. There should be two kinds of get width and height functions you have written in image and matrix .cpp files which would be handy here.\u00a0. The second one is a bit more complicated, and I recommend you look at the public tests for an example. It shows one quite clearly and you can modify from that to get some edge cases.\u00a0"}, {"id": 3128, "value": "You can add a delete to every if statement before you exit your program."}, {"id": 3129, "value": "cat is a command for reading files, it's included in the error because the autograder uses the cat command to read files.\u00a0. . The problem is that in resize.cpp, you never output the new image as a file. At the end of resizing, make sure you create an ofstream and output the image into it. If you need help with file inputs and outputs, check out these notes."}, {"id": 3130, "value": "std:bad_alloc suggests some kind of memory leak. I would recommend setting up the address sanitizer on your machine and running with horses locally.. . You can also use a debugger to step through seam_carve with horses as input and see if anything looks strange.. . Edit: you can also look through your code and make sure that every object you create with \"new\" is deleted with \"delete\"."}, {"id": 3131, "value": "Failing the UB tests suggests some memory leaks in your code. You should make sure that any objects you create with \"new\" are deleted with \"delete\".. . I would also recommend setting up the address sanitizer to help find the leaks."}, {"id": 3132, "value": "marking as solved"}, {"id": 3133, "value": ""}, {"id": 3134, "value": "If you need to access a specific pixel in an Image object, call Image_get_pixel instead. This will return a\u00a0Pixel object and .r will give you the red value. Calling Matrix_at on\u00a0img->red_channel does not respect the interface."}, {"id": 3135, "value": "Based on your most recent autograder submission, you're timing out on the processing public tests. I'd start by running\u00a0perf to figure out where your code is taking the longest (https://eecs280staff.github.io/p2-cv/perf.html)"}, {"id": 3136, "value": "Add\u00a0using namespace std; after your include statements so you can type\u00a0string instead of\u00a0std::string"}, {"id": 3137, "value": "The function signature reads as:. void Matrix_fill(Matrix* mat, int value). Since you're using\u00a0ptr\u00a0as if it's defined in the first line, and it also isn't defined as a parameter or a variable outside of the function, it really isn't defined.. . Think about what you actually mean and are trying to do with this\u00a0ptr."}, {"id": 3138, "value": "Have you tried walking through this test case with the debugger?"}, {"id": 3139, "value": "As the AG feedback says, \"resize.cpp:11 Method of 42 non-commenting source statements exceeds limit of 40\". . The function in line 11 of resize.cpp is a long function. It has 42 lines, which exceeds the limit of 40 lines."}, {"id": 3140, "value": "Are you copying the functions in the helper files into your cpp files?"}, {"id": 3141, "value": "@782"}, {"id": 3142, "value": "The height attribute of an image will not be constant, hence why the compiler is complaining. Instead, use the constant MAX_MATRIX_HEIGHT."}, {"id": 3143, "value": "The reason it isn't filled with 0s is because it shows you the final energy matrix, filling it with 0s is just the first step.. . You should fill the border of the energy Matrix with the highest energy calculated.\u00a0"}, {"id": 3144, "value": "The only way you could really see what's going on is using your debugger to step through a small image like dog, and see where it's going wrong, or just comparing outputs of your files.. . Some things I can suggest is making sure your rotate function works correctly, and that your\u00a0seam_carve_height function correctly rotates and unrotates before and after carving it."}, {"id": 3145, "value": "When you run resize with the wrong number of arguments, your code is accessing memory out of bounds (usually something like int a = std::atoi(argv[5)). This is why you're seeing this error.. . For this project, you don't need to worry about us passing incorrect, or an invalid number of arguments."}, {"id": 3146, "value": "Marking as resolved."}, {"id": 3147, "value": "It would be the use of iteration of a for loop (double) to parse through the matrixes and set each pixel within the Image matrix. Additionally, the istream parameter will keep reading in (skipping white space), until it fails, and once it fails, then the compiler will be able to tell there nothing left = end of the file."}, {"id": 3148, "value": "It looks like you're running VS Code on Windows. Are you opening your project in WSL first before trying to debug?"}, {"id": 3149, "value": "The function Image_equal() uses your Image_get_pixel() implementation to compare two Images pixel by pixel. I'd double-check your Image_get_pixel. It looks like you're mixing up two colors."}, {"id": 3150, "value": "It means you have too much nesting going on. A triple-nested for-loop, or an if-statement within a double-nested for-loop, has one additional layer of depth when compared to a double-nested for-loop. You'll have to get rid of one layer at the location specified by the style check while keeping functionality the same to pass the style check."}, {"id": 3151, "value": "If you plan to iterate through only one row, keep the row number constant and pass i in as the column.. . E.g. (if I wanted to iterate through only row 0). . for (int i = 0; i < Matrix_width(mat); ++i){. \u00a0\u00a0 Matrix_at(mat, 0, i);. }. . If you want to iterate through the entire matrix, consider using a double for loop.. . "}, {"id": 3152, "value": "there is a good lecture example but basically,int main(int argc, char **argv){\u00a0 // Main program here}Notice the parameters in main, argc is the size of argv.argv is an array of C-strings. argv[0] in the sake of the project is going to be \u201cresize.exe\u201d\u2026Long story short you should watch the end of lecture 5 I believe. It will make a lot of sense especially if you watch DeOrios lecture.\u00a0"}, {"id": 3153, "value": "Yes, but be aware of respecting the public interface when testing Image functions (in other words, when testing image, don't test matrix functions)"}, {"id": 3154, "value": "./processing_public_tests.exe dog > my_output.txtdiff (or sdiff) my output.txt output.txt. . Also, from the spec: \"The seam carving tests work sequentially and stop at the first deviation from correct behavior so that you can identify the point at which your code is incorrect.\""}, {"id": 3155, "value": "You need to expose one more bug for each test suite. This means you have to extend your matrix and image test cases to cover more scenarios. You can find some good hints on piazza on how to do so."}, {"id": 3156, "value": "You seem to be calling Matrix_width and Matrix_height before you initialize your matrix."}, {"id": 3157, "value": ""}, {"id": 3158, "value": "You certainly can iterate over a row as the student answer describes above. However, I would highly suggest using matrix at instead of relying upon ptr arithmetic.\u00a0"}, {"id": 3159, "value": "You can use the ternary operator. Personally, I would highly suggest against it. Typically many style guides you\u2019ll encounter strongly advise against its usage due to readability issues.\u00a0As the student answer suggests, you might want to investigate helper functions.\u00a0"}, {"id": 3160, "value": "per the student answer, use `squared_difference()` -- if you look at the function implementation, this is the sum of square differences between two pixels' RGB values."}, {"id": 3161, "value": "It looks like you're not removing the seam at all. I'd check `remove_vertical_seam` or `seam_carve_width` carefully in your processing.cpp."}, {"id": 3162, "value": "It's difficult to tell based on this screenshot alone, but unresolved external symbol usually means that you haven't defined certain functions. For example, VS is calling `Image_init` an unresolved external symbol, which may indicate that you haven't implemented `Image_init` yet. Some of your code is trying to use `Image_init`, but it can't find a corresponding implementation to match those usages with.. . Double-check that you included Image.cpp in your build files and/or set your build target to a different file than Image_tests.cpp. If you need more help, try to come to OH."}, {"id": 3163, "value": "As the student answer suggests, please try running your code on CAEN. The CAEN environment is the most similar to the AG one.\u00a0"}, {"id": 3164, "value": "Feel free to come to OH to discuss your test cases and your test case strategy and we will be more than happy to help.\u00a0There isn\u2019t really an exact strategy for exposing the \u201clast bug.\u201d As the student answer suggests, writing additional test cases for some of your functions might help.\u00a0"}, {"id": 3165, "value": ""}, {"id": 3166, "value": "Marking as resolved. Glad you were able to fix the problem!\u00a0"}, {"id": 3167, "value": "You can set a break point on the assert (line 150), and step through to see where your cost matrix differs from the correct one.. . Also note, as a part of the test case file, we write your cost matrix output to a txt. You can use diff, or an online diff checker to compare the correct output to your output. This will help you narrow down where your function might have a bug and can help you set up breakpoints for debugging."}, {"id": 3168, "value": "Hard to tell the issue without seeing your code. Please make a private post or come to OH for further assistance."}, {"id": 3169, "value": "Have you walked through this test case with your debugger?"}, {"id": 3170, "value": "There is no main_test.in for P2. Hence, it cannot find this file. You can remove the arguments (args) from your launch.json."}, {"id": 3171, "value": "The Pixel struct is a convenient way to store the r,g,b values(for example, you can alternatively use a vector pair inside a vector pair to store r,g,b values).\u00a0. . Your first Image_init function initializes the red, green, and blue channels with dimensions. Your second Image_init function will fill these matrices with the associated red, green, and blue values. Alternatively, Image_set_pixel can also fill in the matrices by taking in a color(Pixel struct with an r,g, and b value).. . After you have filled these matrices with values, you would want a function that can get these values(image_get_pixel).\u00a0. . To set the pixel, you are going to change the color_channel matrices to the r,g, or b component of the color.. . To get the pixel, you are taking data from the matrices and storing them into the pixel's r, g, or b variables."}, {"id": 3172, "value": "Please add your uniqname to your profile so we can access your AG submission (@64).. . You're most likely not cleaning up some dynamic memory with the delete keyword. The AG will have a different limit than your computer."}, {"id": 3173, "value": "I'm assuming when you say empty rows you mean rows and columns past the length and width. Those should be completely ignored and no newline should be printed. If instead you mean a row within the proper bounds that hasn't been set yet, you don't have to deal with this as the functions we require a pointer to a valid matrix."}, {"id": 3174, "value": "Either approach is fine. Our main concern is that you are not directly modifying mat data without using Matrix_at.\u00a0"}, {"id": 3175, "value": "Please add your uniqname to your profile so we can assist you."}, {"id": 3176, "value": "Using Image_init is perfectly fine in remove_vertical_seam."}, {"id": 3177, "value": "On the AG it seems like just the output is incorrect. As for resize, it appears that you are failing an assertion in your image_init.. . For the incorrect output, you'll need to check how the output differs in order to figure out what might be the potential problem in your code.\u00a0 Once you have those differences, we can help you debug from there.. . Walking through the debugger for your resize.cpp should help you figure out why that assertion is failing. I suspect that the image width and height are being read in incorrectly there."}, {"id": 3178, "value": "It looks like your local repository isn't set up correctly. You may need to restart the git tutorial and try again. Make sure you don't forget to run 'git init' in your local directory.\u00a0"}, {"id": 3179, "value": "I converted your post to private since you're sharing code. In the future, please share your code only in private posts -- you don't want anyone stealing your ideas!. . Recall that the * operator is the dereference operator, and we use it on pointers to get the objects they're pointing to. However, img->red_channel returns a Matrix, not a Matrix pointer. Matrix_at() takes in a Matrix pointer, not a Matrix. Is there another operator you can use to get a pointer to (img->red_channel)? I recommend you review Lab 3 for tips."}, {"id": 3180, "value": "Yes, but only the libraries that are listed in the requirements and restrictions. For reference: Use these libraries: <iostream>, <fstream>, <cstdlib>, <sstream>, <cassert>, <string>,. But don't use any other ones."}, {"id": 3181, "value": "You're getting failures because your code runs and has assert statements that fail. For example, if you do \"assert(1 == 2)\" that will fail and cause your code to fail.. . Also, make sure you return values from non-void functions. It's possible that some errors occur because you aren't doing this in all cases."}, {"id": 3182, "value": "It's likely an issue with const-ness: consider what making your matrix pointers const does here."}, {"id": 3183, "value": ". a (constant) pointer to int. . It is a pointer to a constant int. I would review last week's worksheet for more info about this.. . . const int* ptr_const_int; // pointer to a constant integer. int* const const_ptr_int; // constant pointer to an integer. . . Every time I try and call the Matrix_at function (either version) I get a \"No matching function call\" error.\u00a0. . You have to make sure Matrix.h is included in the file that you are calling this. Also pay attention to what you are passing into it. You want a pointer to a matrix/constant matrix, and two integers as parameters."}, {"id": 3184, "value": "If you want to get some info about the channels, you should use Image_get_pixel()"}, {"id": 3185, "value": "Do you have address santizers enabled? Those are a great way to pinpoint where the error is happening. You can do this through VSCode or through the Makefile, described here: https://eecs280staff.github.io/tutorials/setup_asan.html"}, {"id": 3186, "value": ". When testing Matrix_at() my partner and I have noticed that we can assign values to positions that are outside of the size of the Matrix we have initialized. . This is where writing asserts in your function will be helpful. Write assert statements, and when you run Image_tests you should see what function is making the assert statement false. Base your assert statement from the REQUIRES clause of each function."}, {"id": 3187, "value": "It sounds like the memory used for your first matrix was reused for the second one, hence the \"43\" values left over. Your operating system may reuse a pool of memory without first \"clearing\" its values for the sake of performance. However, this behavior isn't guaranteed to happen on all platforms (or even with consecutive runs of the test on your computer). Thus, you want to make sure your tests initialize all values in a Matrix before checking all values (which is what Matrix_print() technically does) to avoid non-determinism. Is there a function you can use to quickly initialize all values to something?"}, {"id": 3188, "value": "There is not a direct correlation between a number of bugs exposed and private test cases. However, if you test your code thoroughly, you can be more confident that you will pass the private test cases!"}, {"id": 3189, "value": "If you mean for a scenario such as accessing mat->width outside of Matrix's functions, the reason is you want to respect the public interface.. . Usually, accessing members directly is not a good idea because you can lose track of the changes made to the struct in your code."}, {"id": 3190, "value": "Every time you remove a vertical seam, you should update the cost and energy matrices. You could use a while loop in carve_width or seam_carve until you reach the desired width and height -make sure to use new and delete."}, {"id": 3191, "value": "I would check out this part of the notes for a detailed explanation. Here's a small example for you as well.. . Your task is to create an ifstream based on the file (on how to do this, checkout the link). Once you pass it into the Image_init function, you can read in the ifstream like how you read in cin, using the extraction operator (>>).. . For example, suppose the ifstream, named fin, has the following format:. 3. 2\u00a0 2. Then I can read it in as such. . fin >> a >> b >> c; // a = 3, b = 2, c = 2"}, {"id": 3192, "value": "Long is an integer type with higher precision (it stores more bits), so when it's converted to int, it loses precision.. . I would not worry about the warning for the specific functions you are implementing. However, to fix this warning, you can cast your result to int before returning it, such as. . int foo() {. \tlong x = 1;. \treturn (int)x;. }"}, {"id": 3193, "value": "Unfortunately, it's hard to debug issues like this via Piazza and code screenshots. I recommend you start by running processing_public_tests.exe under your debugger, stepping through the resize calculation for the crabster image and checking which seam values differ. From there, you can retrace your steps by setting breakpoints in find_minimal_vertical_seam() and checking which path through your if statement causes the incorrect seam value."}, {"id": 3194, "value": "Read the RME's for the last couple functions very carefully and try to think of what edge cases might not be accounted for in a basic implementation of those functions."}, {"id": 3195, "value": "You are probably not passing in the arguments needed for resize in Xcode. Check out this part of the Xcode tutorial. Remember not to pass in the name of the program as an argument."}, {"id": 3196, "value": "Have you added your arguments to your launch.json as mentioned here?. . . I am able to fout the address but get an error when I try to derefrence the pointer. . I am not sure what pointer you need to dereference"}, {"id": 3197, "value": "I looked at your code. Your compute_energy_matrix is inefficient. Do you need to call fill_border multiple times or only once?"}, {"id": 3198, "value": "Looks like you figured it out :)"}, {"id": 3199, "value": "If you pass in a regular pointer it should work, unless you have an overloaded function that takes in a non const version. Then it will use that one instead, so you would need to pass in a const pointer."}, {"id": 3200, "value": "It sounds like you're getting an error due to an implicit cast. Try making the cast explicit by casting the _int64 result to a regular int."}, {"id": 3201, "value": "The best course of action would probably be to run resize with your debugger and see exactly where the segment failure happens. Take a look at the stack trace and see what function is causing the error. Odds are that you're indexing out-of-bounds at some point. If you look at everything and still can't figure out the issue, come to office hours so we can try and help you out!. . Also, please update your Piazza display name to include you uniqname as stated in @64."}, {"id": 3202, "value": "Think about more scenarios to test for Matrix_max (one hint: negative number as max)"}, {"id": 3203, "value": "If you're initializing a new image in your processing file, you could utilize your Image_init function (whose implementation deals with rgb channels) rather than directly accessing the channels within processing."}, {"id": 3204, "value": "Yes"}, {"id": 3205, "value": "Yes. Since you've defined height and width functions which retrieve the dimensions of an image (or matrix) for you, respecting the interface would mean using these functions whenever you need to access the height and width member variables. You would want to use your helper access functions (such as Image_height and Image_width) rather than directly accessing member variables thorough the arrow operator.\u00a0"}, {"id": 3206, "value": ""}, {"id": 3207, "value": "When you do \"*img = *aux_img;\" you're setting all of the memory values in one image equal to the other's memory values. This means the width, height, and all 3 Matrix channels get their data copied over. Because the step\u00a0copies all of the data, there isn't any data that both img and aux_img are sharing. aux_img is just used as a reference to copy the data from.. . Because img and aux_img don't \"share\" any memory, it's safe to delete aux_img and use img as normal."}, {"id": 3208, "value": "Try running your code on CAEN, it might catch something"}, {"id": 3209, "value": "We're dealing with the cost matrix, which is essentially a matrix that you already made which copies the dimensions of the image and has the cost of each pixel from your energy matrix.In find minimal_vertical_seam, we are just working with the cost matrix in order to find the lowest cost path from the bottom of the matrix to the top and storing that path into the seam array.So, seam is just an array of integers, specifically column numbers for the lowest cost pixel in each row. So seam[0] = lowest cost pixel in the 0th row, and so on. This is why the specs recommend\u00a0Matrix_column_of_min_value_in_row for filling the seam array. Make sure you start from the bottom row as specified in the specs tho, since the first row all have the same cost. I would recommend looking at the images in the specs again if any of this is confusing!So no, you don't really work with the image until the remove vertical seam function, so u don't need to call any img functions or pixel stuff since you're just working with a matrix."}, {"id": 3210, "value": "It looks like the first (or rather, last calculated since we are moving upwards) value in your seam matrix is wrong.. . It says \"for ties, pick the leftmost\" in the spec, but I think you may have misinterpreted. It means leftmost but still following the rule that you can only go up, left, or right. Since the seam in the second row was at 2, you can only choose between 1, 2, and 3 for the first row. Since it's a tie, you would pick 1."}, {"id": 3211, "value": "Resolved"}, {"id": 3212, "value": "Without seeing your code, what I suspect is that new isn\u2019t being called when creating the matrix in your test case. Hence, this memory is being placed on the stack rather than the heap"}, {"id": 3213, "value": "if you run make style, it should give you a report of what lines have more than 90 characters. Check out this tutorial as well."}, {"id": 3214, "value": "Note that you are trying to find the row the ptr is in. You\u2019re almost there with the formula.\u00a0You know the distance and you know the width of the matrix. How would you find how many \u201cwidths\u201d aka rows are in that distance?"}, {"id": 3215, "value": "Nope, accessing member data directly isn\u2019t respecting the interface. Consider other functions you have written like matrix width or matrix height"}, {"id": 3216, "value": "Extend the Matrix_print test you have. Write one for a bigger matrix.. . Write a test case to make sure you return the leftmost column when there are multiple columns with a min value in testing Matirx_column_of_min_value_in_row() (I see that you have one, but there are more variations of it to cover).. . Most of your test cases check for n * n matrices, write tests for matrices such as n * 1, 1 *n, or m * n (where m != n)."}, {"id": 3217, "value": "Please make sure to mark your post as private when sharing code.. . The issue is with how you define your seam array. Refer to @782 on some hints on how to do it."}, {"id": 3218, "value": "Perf is a tool for Linux so if you use MacOS, you need to use a different tool. We are working on a MacOS tutorial, but it seems like you can also use Instrument, check out this post for more info.. "}, {"id": 3219, "value": "You never update the energy matrix when calculating the energy with your result variable. Also, I recommend you change your loop starting point and its terminating condition instead of the if statements you have, so think about what you should put here.. . for (int row = /*starting point*/; row < /*terminating condition*/; row++). "}, {"id": 3220, "value": "Use std::string instead of string.\u00a0"}, {"id": 3221, "value": "You shouldn't be using cout in your print function. os is the stream you want to be outputting to, which is an input parameter for the function."}, {"id": 3222, "value": "Try using std::endl instead of endl.\u00a0"}, {"id": 3223, "value": "Not sure what part of the spec you are referencing there. You should be including those .h files in resize.cpp"}, {"id": 3224, "value": "You should be using Matrix_at. The reason you are getting an error there is mat->data is defined to be a matrix of max size * max size length. The array you are setting it to is not of that type since it is of a different size.\u00a0Another note for using matrix_at is that you want to respect the interfaces we\u2019ve provided for you. You could make a helper function in your test file that takes in a array of values and a mat pointer. In a for loop, this function could then assign values using matrix_at. This would avoid needing to rewrite code for this test case set up.\u00a0"}, {"id": 3225, "value": "Style checks/grades apply to your test cases as well.\u00a0"}, {"id": 3226, "value": "Your logic is right and yes it will access out of bounds if that is all you did. Maybe if statements will help here and your function behaves differently when it\u2019s on column 0 and column width, and it\u2019s what you described here for everything else."}, {"id": 3227, "value": "Please come to Office Hours for debugging questions like this.\u00a0"}, {"id": 3228, "value": "Check your cpp files and make sure they\u2019re including the relevant .h files. I.E., matrix.cpp should include matrix.h.\u00a0"}, {"id": 3229, "value": "The expected energy matrix and the output energy matrix you\u2019ve provided are not equal to each other.\u00a0"}, {"id": 3230, "value": "You don\u2019t need an assertion for if a pointer points to a valid matrix or other struct like an image.\u00a0"}, {"id": 3231, "value": "I recommend you run these problematic tests under your debugger, so you can see exactly which line the segmentation fault is occurring on. It's possible your index calculation in Matrix_at() is incorrect, and thus you're returning a pointer to invalid memory. It's also possible your index calculation is correct, but you are returning a pointer to an object that no longer exists after Matrix_at() returns (such as a local variable), rather than a pointer to an integer in the Matrix's data array. There are many possible causes for your seg fault; I recommend you use your debugger and the address sanitizer like you did in Lab 3 to investigate."}, {"id": 3232, "value": "The 6 bugs you exposed on the autograder are unrelated to any bugs that may or may not be present in your solution. That 6/10 means we ran your Matrix tests against our own buggy Matrix implementations, and your tests exposed enough bugs to earn 6 points. It's a good sign that you're passing the Matrix public tests on the autograder, along with your own local tests. Right now, your Matrix tests are testing two types of matrices; I recommend you expand your test suite to test more types of Matrices, along with more edge cases for each Matrix function."}, {"id": 3233, "value": "Recall that Matrices also have width and height members. Is there a Matrix function you could use to help you initialize the sizes of the red/blue/green channels?"}, {"id": 3234, "value": "Is the image larger than 500x500? If so, the image won't be able to fit into the data arrays we allocate for the red/green/blue Matrix channels, since MAX_MATRIX_WIDTH and MAX_MATRIX_HEIGHT are both 500. Just for fun, you can try making these constants larger than 500, but depending on how much memory you have available, your resize program may struggle with images much larger than 500x500..."}, {"id": 3235, "value": "On the autograder, we compile your .cpp files against unmodified versions of Matrix.h and Image.h. You can add helper functions to your .cpp files, but if you try to reference a helper function from another .cpp file (under the assumption that it is defined in a header file you're including), your code will fail to compile on the autograder with a linker error, since we won't be able to find that function in any of our versions of the header files.. . You can still write helper functions at the top of your .cpp files, but you can only use those helper functions within that file since you cannot submit your own header files."}, {"id": 3236, "value": "You are probably overthinking this. You just have to return the column number for the column that has the smallest value. You can do this by creating another variable, for example, col_min that gets updated whenever you update your min."}, {"id": 3237, "value": "resolved"}, {"id": 3238, "value": ". Meaning the first row of costs will be the same number, maximum energy?. . yes. . . Doesn't that mean the second row(index 0) never gets filled?\u00a0. . why would it not get filled? I would revisit the spec and read carefully on how the cost is calculated for an element in the matrix based on the costs of previous row and the energy of that element."}, {"id": 3239, "value": "The output is a new file (with the name that was passed in as the third parameter (including the ./ parameter)) which contains the resized image in PPM format."}, {"id": 3240, "value": "Marking this as private. Please post your code so we can take a look. "}, {"id": 3241, "value": "From what I can gather, they are all zero indexed."}, {"id": 3242, "value": "Basically fill the border, meaning first and last row and first and last column of a matrix."}, {"id": 3243, "value": "The mutation tests use both buggy and working code to test your tests. It\u2019s supposed to give a positive result when there is buggy code and a negative result when there isn\u2019t anything wrong. It seems like your code is giving positive results for code that is working. This could mean your functions aren\u2019t working correctly and that both your tests and functions are slightly off, or maybe it could mean your tests don\u2019t quite work with edge cases. In any case, you probably want to check both the test and your function implementation"}, {"id": 3244, "value": "Check out @873, especially the followup discussions."}, {"id": 3245, "value": "you have to delete your dynamically allocated seam array using the delete[] operator, so\u00a0. . delete[] seam; . The reason that it's delete[] vs. delete is that you dynamically allocated an array, so all the elements will be dynamic. delete[] makes sure all of them get deleted.\u00a0"}, {"id": 3246, "value": "You should be zero indexing, but the Matrix_column_of_min_value_in_row is exclusive for it's upper bound."}, {"id": 3247, "value": "The functions should just return the row or column numbers. For example, if\u00a0ptr is a pointer to an element in the third row and second column of the matrix, then Matrix_row(mat, ptr) would return 3 and Matrix_col(mat, ptr) would return 2.. "}, {"id": 3248, "value": "Your resize.exe currently attempts to read in initial_ppm, output_ppm, desired_width,\u00a0and\u00a0desired_height from cin. These values are instead passed into your program through command-line arguments and are stored in\u00a0char* argv[]. Check out lecture 6 in the \"Command-line arguments\" section for information on how to implement this.\u00a0"}, {"id": 3249, "value": "I believe it\u2019s meant to be 5x5 and if you count the number of triplets there should be 25 (first row has 9 triplets). You might want to manually input the values for you to check in your test cases\u00a0"}, {"id": 3250, "value": "I recommend having at least one test for every function no matter how trivial it may seem. For functions like print and border fill, maybe you could test whether it works for 1x1, 1xn, nx1 size matrices (or other sizes that may work differently). And for functions like Matrix_row/col, maybe test one case where the ptr is in the last row/col and moving forward the ptr by 1 also increases the value returned.\u00a0"}, {"id": 3251, "value": "Your max intensity value is 225 and not 255"}, {"id": 3252, "value": "As the student answer suggests, you are having a memory leak. This is because you used the new keyword and did not have a matching delete.\u00a0A false positive means that a correct solution would fail that test case, indicating that your expected output in your test case was incorrect.\u00a0"}, {"id": 3253, "value": "As the student answer suggests, when you click the orange box, you\u2019ll see what undefined behaviour occurred. Usually this is a memory leak, or out of bounds access.\u00a0"}, {"id": 3254, "value": "Not sure which function you\u2019re referring to, but any functions that you have written in the previous 3 parts (matrix, image, processing) can be used, just make sure to include the header file at the top. If the function comes from a library, make sure to check that it\u2019s an acceptable one! See the last part of the specs for a list of libraries that can be used."}, {"id": 3255, "value": "In your Image_init function for reading in from a PPM file, be sure that you initialize your matrices first before calling any other matrix functions."}, {"id": 3256, "value": ""}, {"id": 3257, "value": "Try just int *beggining = mat->data;"}, {"id": 3258, "value": "Marking as resolved."}, {"id": 3259, "value": "Converting to private since discussing code specifics. You are missing a semi-colon on line 39."}, {"id": 3260, "value": "In your `test_row_basic` function, where exactly does `ptr` point to as per your `Matrix_init` function?"}, {"id": 3261, "value": "@786"}, {"id": 3262, "value": "I believe that if you run \"make test\", it should run your resize program with all of the provided ppm files and compare them to the correct output files."}, {"id": 3263, "value": "See https://eecs280staff.github.io/p2-cv/perf.html"}, {"id": 3264, "value": "I'm not sure what you mean by not being able to get the test to run in XCode?"}, {"id": 3265, "value": "you need say std::endl. . The reason is that c++ doesn't know what endl you are talking about so you should specify this.. . An alternative is adding. . using namespace std;. on top of your file"}, {"id": 3266, "value": "Also, to improve efficiency, remember that you don't have to set a Matrix to contain all 0s on Matrix_init().. . However, the point of our projects is not micro-optimizations like this (unless it gets necessary). The student's answer is what you have to focus on first."}, {"id": 3267, "value": "Marking as resolved"}, {"id": 3268, "value": "Notice that the parameters passed into the two functions are different. For the one that returns const int*, you are passing a const Matrix*. . const int* Matrix_at(const Matrix* mat, int row, int column);. If you pass in a pointer to a const Matrix (const Matrix* mat), then the compiler will understand that you are trying to use this function that returns a const int*. . whereas,. . If you pass in a pointer to a Matrix (Matrix* mat), then it will understand you are trying to call the function that returns int*"}, {"id": 3269, "value": "As the student answer suggests, make sure you've downloaded the C++ VSCode extensions and those in file error warnings should show up."}, {"id": 3270, "value": "Could you please add your uniqname to your profile so we can look up your AG submit?"}, {"id": 3271, "value": "So now that you have codeLLDB, go to your launch.json,and copy paste this in:. . {. \u00a0 \u00a0 \"version\": \"0.2.0\",. \u00a0 \u00a0 \"configurations\": [. \u00a0 \u00a0 \u00a0 \u00a0 {. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"lldb\",. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"request\": \"launch\",. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"Debug\",.   \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"program\": \"${workspaceFolder}/stats_tests.exe\", . \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"args\": [],. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cwd\": \"${workspaceFolder}\". \u00a0 \u00a0 \u00a0 \u00a0 }. \u00a0 \u00a0 ]. }. . remember to change the name of the \"program\""}, {"id": 3272, "value": "My tip is the following. What are some assumptions that we've made in the public test cases we've provided you, that aren't listed assumptions in the spec. I.E for P1, our test cases gave you sorted input, but we made no statement about being given sorted input in the spec."}, {"id": 3273, "value": "I believe that it should zero index for both rows and columns."}, {"id": 3274, "value": "Try force quitting Xcode. To do this you can press cmd-option-esc to open the task manager, then highlight Xcode and press \"force quit\". Then, try reopening the project and let me know if the error persists."}, {"id": 3275, "value": "As the student answer suggests, you can return index into the mat array at that index and return the address of that element. I.E &mat->data[index]"}, {"id": 3276, "value": "It could be you aren't updating the dimensions of the image object, hence why it's saying they are not equal."}, {"id": 3277, "value": "In general, if you want to pass a pointer to a non-pointer value, you can get the memory address of that value with the & symbol.For example, if I understand your question correctly, a pointer to the matrix of the red channel could be. . Matrix* red_mat = &(img->red_channel);"}, {"id": 3278, "value": "Yes this is normal.\u00a0. . Technically since pointers are stored as 8-byte integers under the hood, and the \"diff\" variable you declared is only 4-bytes, it is possible that the difference between two 8-byte numbers could be larger than what a 4-byte integer can store. That is why the compiler is recommending using a long, which is an 8-byte integer."}, {"id": 3279, "value": "You might still have a merge conflict after popping off the stash. You can resolve it by following a tutorial here."}, {"id": 3280, "value": "Please try to run it on CAEN."}, {"id": 3281, "value": "This image init function is to read in ppm images. Look at dog.ppm in your starter files for an example of what it should be. It differs from set pixel in that the init function reads everything that is given and the set pixel function only changes the value of one pixel in the whole image.\u00a0. . In your loops, you basically need to change the rgb matrices to match the values that are given. Note that this is an init function, and you would probably need to set width and height of the image and use Matrix init for the rgb matrices.. . And lastly, yes. Apart from the header which has P3, width, height, and max intensity, everything is 3 values at a time. Note that you don\u2019t need to care about P3 and max intensity since I believe the spec says you\u2019re basically guaranteed these will be the same values."}, {"id": 3282, "value": "Could you open the file \".vscode/c_cpp_properties.json\" and share its current contents with us, please? It's possible something is missing in your configuration."}, {"id": 3283, "value": "First, on CAEN, try creating the folder p2-CV-Copy/ with \"mkdir ~/p2-CV-Copy\". Then, try changing the last part of your rsync command to this: bowenyi@login.engin.umich.edu:~/p2-CV-Copy/"}, {"id": 3284, "value": "Per spec, \"Find the maximum energy so far, and use it to fill in the border pixels.\", so yes!"}, {"id": 3285, "value": "Making this private since talking about code specific things.. . . Also, what is correct formatting for deleting a pointer array?. . delete[] <name of the array>. . . is it okay to initialize an array in a for loop as long as we delete it before it reloops?. . I am not sure if I understand your question.\u00a0. . . Additionally, when I run the public test for processing, the test function for cost fails, so I think something is wrong with the function compute_vertical_cost_matrix and I was wondering if an instructor could look over our code and see what is the issue,. . Look at how you calculate the cost matrix. Remember for calculating, you want to find the minimum cost from the 2-3 cost elements from the previous low. It seems like you are not using the previous row from the cost matrix to achieve this and you are using energy instead. I would revisit the formula and the explanation provided in the spec. Look at line 137 of your processing.cpp submitted to AG, and I hope the bug becomes more apparent.. "}, {"id": 3286, "value": "Marking as resolved"}, {"id": 3287, "value": "Per @64, please make sure you have your uniqname in your piazza handler so we can look up your submission.\u00a0. . Your image.cpp and resize.cpp did not compile. Hence you will not pass the style checks. I would make sure that all files compile first when trying to check for style. You can check if your code adheres to our style guide by running this command in your project directory.. . make style. . . Is there any way Autograder can let me know which lines of code violate the style guidelines?. . Yes, but I think since not all of your files compiled correctly, the style check did not run.. . . I used the code formatting command on VSCode (shift + option + f), but this doesn't help me get any points on style checks.\u00a0. . Some code formatters work, and some don't. I personally think VScode formatting is a mess, so I don't think it will be a big help. If you commit to writing clean code when you start coding, and try to fix it as soon as you notice it, it'll make it easier for you to pass style checks. Check our C++ style guide on how to make sure you write clean code.. . . Is the style guideline available on EECS 280 course website?. . Yes, please check EECS 280 style checking for a detailed way to generate style reports. It will tell you what lines are violating style checks.\u00a0. . . Within how many characters should I write in a line? In my project, when a line is likely to be too long, I simply split it into two parts and put one part down to a new line. But I still lost all points on this criterion;. . Less than 90 characters. . . Within how many lines should my function has? Some of my functions have 40 lines of code, and are they \"long functions?\". . Most of the functions in this project are relatively short. If you have 40-line functions, I think you are overthinking some things!. . . I don't have any deep nesting code in my project. The max amount of loops of a function I implemented was 2 (double for loop). However, I lost all points on this criterion.\u00a0. . If your code doesn't compile, you won't get the points for style.. . . Within how many parameters should a function take? All functions I have take a reasonable amount of parameters (within 4), except Assert_Equal(). For ASSERT_EQUAL, it takes two arguments, but one argument (let's say, Matrix_in_value_in_row()) takes 4 arguments. Is that the reason I lost points on this guideline?. . you should be good here. most of functions are provided by us and seems like you don't have functions with more than 4 parameters.. . . I'm not sure why I got the problem of \"code duplication.\" I wrote some similar test cases in Matrix_test.cpp. Instead of testing each function in matrix.cpp in one testing function, I tested each possible shape of matrices. As a result, the major difference between each testing function I wrote in matrix_test.cpp is the matrix I constructed at the beginning. Except for this, I tested the same functions. Is this considered \"duplication?\". . Code duplication means you have the exact same lines of code more than once. Basically copy + pasting the same code.. "}, {"id": 3288, "value": "You have a bug in your Matrix_init(). You never set the width and the height.. . # Your code pulled from AG. void Matrix_init(Matrix* mat, int width, int height) {. \u00a0 // Initialize the width and height of the matrix to the given parameters. \u00a0 width = mat->width;. \u00a0 height = mat->height;. \u00a0 }"}, {"id": 3289, "value": "You can run CAEN checks on your own computer, follow this guide. . Here is the style guide"}, {"id": 3290, "value": "There is no rule for main.exe in the make file we provide you."}, {"id": 3291, "value": "Hard to tell what the issue is without seeing your code. Please make a private post on Piazza or come to OH so we can further assist you."}, {"id": 3292, "value": "You don't have to, since as you mentioned, the RME makes no statement that the matrix should be zero'ed out on initialization. "}, {"id": 3293, "value": "make sure you initialize the matrix before you try to assert_equal"}, {"id": 3294, "value": "You don't have to. It could be useful to have output files in your repo so other teammates can inspect results on their own machines."}, {"id": 3295, "value": "This function should be similar to your other Matrix_at function, so testing that would potentially be enough. If you want to be completely thorough, you can make a matrix, populate it, and then create a const pointer pointing to that matrix. You can then use that pointer to test this version of Matrix_at."}, {"id": 3296, "value": "I would assert that the width and height of the matrix have been properly set after a call to Matrix_init."}, {"id": 3297, "value": "Those represent the git status of the files: M means \u201cModified\u201d and U means \u201cUntracked [by git]\u201d.\u00a0"}, {"id": 3298, "value": "I recommend you have one test for each function you are testing. Also, remember that you can only submit 50 tests.. . For instance, for testing Matrix_max(), I would create a function such as this:. . TEST(test_Matrix_max). {. \t// test cases here. \t// try different matrices with different sizes and values. }"}, {"id": 3299, "value": "It probably means that you are indexing out of bounds. It would be difficult for us to know exactly what is happening, so I suggest using the debugger and setting breakpoints. Try to see before what line the segmentation fault happens and debug from there.Office hours can help for a more thorough investigation of the bug if you are not able to find it by debugging."}, {"id": 3300, "value": "Without looking at your code, it's not easy to tell. I suspect that you have undefined behavior. Try using the address sanitizer and it might help you detect that issue."}, {"id": 3301, "value": "Don't forget that there's no space before \"\\n\" on the first line of expectedSameEle(). However, there must be a space in all other lines before \"\\n.\"\u00a0"}, {"id": 3302, "value": "I suspect you are going out of bounds in your implementation. Set up the address sanitizer to help with detecting undefined behaviors."}, {"id": 3303, "value": "1. Create a matrix. 2. Call `Matrix_fill_border` with your matrix. 3. Check the borders of the matrix to see if the values got filled (you could use `*Matrix_at(...)`, for example...)"}, {"id": 3304, "value": "For future posts, please add your unique name to your profile so it is easier to see your AG submits."}, {"id": 3305, "value": "My strategy for finding bugs for points is to always check for what assumptions have the public tests we've given have made, but the spec doesn't state. Ex. for p1, all the input was sorted in our public test cases, but the spec didn't make explicit mention that you were guaranteed input would be sorted.\u00a0"}, {"id": 3306, "value": ". we should not trust the public test? I just want to clarify does that mean the test is written incorrectly?. . The public test is written correctly. However, it is not a thorough test of your implementation (hence why you need to write your own test cases). It tests some basic stuff and helps you to make sure your code compiles.. . . Are we assuming that each indexes in the matrix stores 4 bytes of memory? When I tried to find the difference between the element and the beginning to find the index it converted the pointers to a long type. . I suggest reviewing this week's lab on pointer arithmetics for this issue."}, {"id": 3307, "value": "Converting to private since we are discussing code specifics. Because you are failing your assertion at line 48 in matrix.cpp, the delete you have later in the function never executes. If you pass that assertion, your delete will run and you won't have a memory leak."}, {"id": 3308, "value": "Essentially, you will get a valid data passed into your function. I.E we won't pass in a bad ppm file, or a null pointer into your function.\u00a0. . Some things will be more difficult to assert than others. You don't have to assert every requires we have in the RME. If something seems fairly easy to assert, feel free to do so, but it isn't required."}, {"id": 3309, "value": "Essentially, you will get a valid data passed into your function. I.E we won't pass in a bad ppm file, or a null pointer into your function.\u00a0. . Some things will be more difficult to assert than others. You don't have to assert every requires we have in the RME. If something seems fairly easy to assert, feel free to do so, but it isn't required."}, {"id": 3310, "value": "> `mat` points to a Matrix. . This just means that `mat` is a pointer to a `Matrix` instance -- that is, it has the type `Matrix *`. In this project, you will generally create `Matrix` instances on the *heap* (will be explained in a later lecture) using the `new` keyword (this is all you need to know for now). Basically, a matrix, with $$500 \\times 500$$ `int`s in it, is ***wayyy*** too big to store in the stack frame for any function, so we can instead use the `new` keyword to create it, which just makes it \"somewhere else\" in memory and returns a pointer to that \"somewhere else\" location which we store as our pointer, `mat`. For example:. ```cpp. Matrix *mat = new Matrix;. ```. . > `mat` points to a valid `Matrix`. . This just means the `Matrix`-pointer has been allocated using `new` and then initialized using the `Matrix_init()` function and thus has valid height/width properties.. . ```cpp. Matrix *mat = new Matrix;. Matrix_init(mat);. // mat now points to a valid Matrix!. ```. . > `ptr` points to an element in the `Matrix`. >. > Does this mean the address this pointer points to needs to be within the address range of the `Matrix->data` array?. >. Yes."}, {"id": 3311, "value": "I would look into seeing if you're accessing a value after calling delete. Walking through this test case with the debugger should help you find it."}, {"id": 3312, "value": "Using a `while` loop here is a good idea. And, yes, you can read `P3` into a random variable as you won't be needing it later. Regarding reading pixels into your image, are there any functions that you've written in `image.cpp` that would allow you to store the pixels into an image?"}, {"id": 3313, "value": "You will probably want to initialize a new image, I'm not sure how else you could do this. Although remember you should also delete any memory you are no longer using."}, {"id": 3314, "value": "At some point you allocate an array with new. When you free it you are using \"delete\", however you should use \"delete[]\"."}, {"id": 3315, "value": "There is no set number of test cases you need to write or for how many functions you'll need to write test cases. However, I would suggest writing test cases for all your functions as it not only good practice, but will help you expose more bugs for AG points."}, {"id": 3316, "value": "What do you mean by \"the rows do not match the rows indicated above\"? If you mean that the pixel values are not displayed in a 5x5, whitespaces/new lines in the input file do not matter. For example, you could have all the pixel values on one line. If you're reading in the pixel values correctly using cin, you shouldn't have to worry about doing anything extra for whitespace.\u00a0"}, {"id": 3317, "value": "resolved"}, {"id": 3318, "value": "I would try to run git remote and make sure the link matches that of your repository. If it does, make sure you have your credentials set up on git and make sure to set up your ssh key if you haven't already (there are good GitHub tutorials on how to do this)."}, {"id": 3319, "value": "It could be that you're not in the right directory, or that you're accidentally trying to make a cpp file rather than an exe file. Could you give an example of a file that gives that error message?"}, {"id": 3320, "value": "You can directly access a Matrix's member variables in the Matrix.cpp class, but you can't access them outside (ie. in Matrix_tests.cpp)."}, {"id": 3321, "value": "Try not to overthink it. Let `aux` be a pointer to the newly created image, and suppose `img` is a pointer to the old image. Then you can access the actual image objects for each by dereferencing each. Then it's just a matter of setting the dereferenced old image to the dereferenced new image."}, {"id": 3322, "value": "You should not be directly accessing data member variables of a struct outside their respective files. This means that for Image, you should only ever do `img->width` and `img->height` when you're in `Image.cpp`. Outside of that, you should only use `Image_width` and `Image_height`. This relates to \"respecting the interface\" from lecture."}, {"id": 3323, "value": "It looks like you created a new file called Image_test_helpers.cpp? You may not have included your Image.h file in it, which is why it says undefined reference. In any case, it's best not to create any new files, and you should write all your Image test code in Image_tests.cpp"}, {"id": 3324, "value": "Yes, all Matrix and Image objects should be declared dynamically outside of their respective modules. See the screenshot from the spec below:. . . . Your seam array does not need to be dynamically allocated."}, {"id": 3325, "value": "Try using diff (file1) (file2) in the command line and see what the output is. I suspect it could be an issue with spacing."}, {"id": 3326, "value": "Nope you do not need to. It\u2019s mentioned in the project specs too if I\u2019m not mistaken"}, {"id": 3327, "value": "I'd say your first thought sounds reasonable. Try to go through the graph in the specification of this project again, and you should think of no matter where is the pixel (except at the border), there is a universal way to express the location of its neighbors (has something to do with row and column number associated with the location of X - which is the central pixel).\u00a0. Also, for your last question, I think you only initialize the energy matrix to be zero, but you should use the value of pixels in your image to compute the energy for each pixel which shouldn't be zero.\u00a0"}, {"id": 3328, "value": "Well you only need the project UID as a comment and include all the other libraries you need. I don\u2019t think you include files in your resize. Its supposed to be able to take in inputs from the command line to resize accordingly.. . For your second question, something seems wrong there. Your program should be able to open files, give any necessary error outputs, and output files, all from the command line inputs.. . Yes you should open an ifstream, and no it won\u2019t give you an image pointer. It gives you a ifstream in the form of ppm format file, so you should be using one of the functions you previously wrote (i\u2019m assuming you did matrix, image and processing) to read in this ppm file. Also you probably want to create and destroy an image struct somewhere"}, {"id": 3329, "value": "This part of the version control tutorial which shows you how to resolve conflicts might help.\u00a0"}, {"id": 3330, "value": "This is most likely an issue with your Matrix_at function as the test cases in the Matrix_public_test use Matrix_at to initialize values within the Matrix. I would write some of your own test cases for Matrix_at or use the debugger to step through the public test in order to see what is going wrong in that function."}, {"id": 3331, "value": "It might be an issue with spacing/white space. Double check to make sure you're not including an extra new line somewhere"}, {"id": 3332, "value": "Please send an email to eecs280admin@umich.edu"}, {"id": 3333, "value": "I doubt we have to consider that. It's also stated in the spec that intensity values range from 0 - 255."}, {"id": 3334, "value": "When the tests do not compile it will show up as \"No tests submitted\". It seems like you have multiple test cases defined with the name \"test_matrix_print_small\", which is not allowed by the unit test framework."}, {"id": 3335, "value": "The lecture notes go over this in the \"Strings\" section: https://eecs280staff.github.io/notes/05_Strings_Streams_IO.html#strings-streams-io. "}, {"id": 3336, "value": "While I don't think that the public tests will check any element within the matrix right after init is called, I believe there is no reason to fill unused elements to 0. I think it is expected that the matrix will not be checked until it is populated, either with file input, a call to fill, or having each individual element be changed."}, {"id": 3337, "value": "I believe that traversal by both pointer and index is completely valid for this finding this function. You are just returning the maximum value, so neither pointer nor index would provide any significant efficiency increase or lead to significantly cleaner code. You should just use whichever one you feel more comfortable with or feels more intuitive for this specific problem."}, {"id": 3338, "value": "From the spec, \"Because we may be reading in images generated from programs that don\u2019t use whitespace in the same way that we do, the\u00a0Image_init\u00a0function must accommodate any kind of whitespace used to separate elements of the PPM format (if you use C++ style I/O with\u00a0>>, this should be no problem).\". In public tests, you may see sometimes we use tabs instead of spaces to separate two numbers, and this is allowed. This is a \"poorly behaved\" input, but not faulty. As the spec said, if you use >>, this should already be handled for you."}, {"id": 3339, "value": "!= shows you the difference between your actual output and the expected correct output.. You may want to check that you successfully initialized your image. Only after that, you may check if your print function works since if your image is \"empty\", nothing would be printed out.. For initialization, you may want to use other functions you implemented in image.cpp to avoid duplicate code. To be more specific, initializing an image with istream includes set up each pixel in this image. From the spec, \"To read and write individual\u00a0Pixels in an\u00a0Image, use the\u00a0Image_get_pixel\u00a0and\u00a0Image_set_pixel functions, respectively.\". Also you may want to read the \"Respect the interfaces!\" of our spec. For example, if you want to access data from image, consider Matrix_at() instead of directly using mat->data."}, {"id": 3340, "value": "From your last submission, you have an error on line 253 of Image_tests so it couldn't compile.. . for Matrix_tests you have 51 tests, but the maximum is 50"}, {"id": 3341, "value": "You may want to double check which argument is the one for file name. If you give the wrong one, you will have error in opening it.. When you resize an image, the new width and height must be less than or equal to original."}, {"id": 3342, "value": "You should create a dynamic array on the heap using the new keyword. Thus, your seam should be a pointer type. Something like: int* array = new int[size]"}, {"id": 3343, "value": "Thanks for your question! If you look at matrix.h, you'll see that data[MAX_MATRIX_WIDTH * MAX_MATRIX_HEIGHT] is already initialized as a member variable of the matrix struct. This means whenever you create a Matrix object it will automatically have a data array initialized, so you don't need to redeclare it. In matrix_init, you should just set mat->height and mat->width to the inputted values.. . The error is valid, because you shouldn't be initializing the data array like this. I'm not sure why it did not appear on your partner's compiler."}, {"id": 3344, "value": ""}, {"id": 3345, "value": "Matrix_at() returns a pointer to an integer in the Matrix. I'm assuming you're reading an integer in from the input stream. You cannot set the pointer returned by Matrix_at() to the next integer read in, but can you use this pointer to set the integer it points to? Think about the operators we use with pointers."}, {"id": 3346, "value": "mat is a pointer to a Matrix; it looks like you want to access that Matrix's underlying data array. You can access data the same way you access the Matrix's width in your Matrix_at() implementation (using the mat pointer and the arrow operator); then, you can index into data using the [] operator.. . Also, say you have an integer array called arr. The operation \"arr[index]\" will return the integer at that index, not a pointer to that element. If you want to get a pointer to the element in arr at index, is there another operator that can help you here? Or alternatively, can you exploit the fact that arr can decay into a pointer to its first element, and then perform some pointer arithmetic?"}, {"id": 3347, "value": "You can use 2 ostringstreams, one for the expected output (you have to manually type this) and one to pass into the Matrix_print function (output from Matrix_print will be stored in the ostringstream). There is an example in Matrix_public_test.cpp!"}, {"id": 3348, "value": ""}, {"id": 3349, "value": ". using the dereference operator?. . . If you dereference the matrix, you will be violating the public interface. Instead, think about how you can use Matrix_at() to get what you need.\\. . . . . . . . . . . . . will I need a for loop here. . . . . . . . . . . . Yes!"}, {"id": 3350, "value": "The red, green and blue channels represent the color value for each pixel on the screen. They are stored as matrices as a matrix is a 2d grid of numbers, as that is a convenient way to represent your 2d grid of pixels. You would use your matrix functions, such as matrix init, to alter your color channels to do whatever the image RME tells you to do."}, {"id": 3351, "value": "This is all your code and the GitHub is more for your own backup/for collaboration so I think it should be fine. However, do make sure that your repo is private and make sure to cross reference the honor code."}, {"id": 3352, "value": "You have to match what make wants (you can look at the Makefile for this). It will be Matrix_tests.exe and Matrix_public_test.exe -> notice M is capitalized "}, {"id": 3353, "value": "For Image_init(): Make sure to initialize the red/blue/green channels with Matrix_init(). . For your Image_print(): I would think about your inner for loop for iterating the width of the image. It seems to me it can go out of bounds. I suggest you think about how a function such as Image_get_pixel() might be useful here. Also, remember that you want to print the red, green, and blue value for each pixel (but in your implementation you skip some columns for the channels by adding +1 or +2)."}, {"id": 3354, "value": "Please post a private piazza post so we can look at the code. Ideally, this question will be easier to discuss during office hours."}, {"id": 3355, "value": "resolved"}, {"id": 3356, "value": "Please refer to @599 on how to set up your SSH key as an alternative"}, {"id": 3357, "value": "img is a pointer, so as long as the new object is also an image, you can update the pointer to point to the new image. For this function specifically, you may dereference the image pointer and update the image object it points to. The size of image doesn't affect it just like you can make an int pointer point to an int variable with value 1, and later you can make it point to another int variable with a different value."}, {"id": 3358, "value": "From what I saw with my project, this appears to be the case, yes. \">>\" will also skip multiple whitespace characters that are grouped together (for example, \"hello \\n\\t world\" would give out \"hello\", followed by \"world\")."}, {"id": 3359, "value": ""}, {"id": 3360, "value": "Yes, other functions can use for loops."}, {"id": 3361, "value": "No, the rows are 0-indexed, so the minimum return value will be 0"}, {"id": 3362, "value": "try reading @787this could help"}, {"id": 3363, "value": "C style strings are char arrays, whereas C++ style strings (std::string).. . If you look at the parameters for the main method, you'll notice that they are int argc and\u00a0char *argv[]. The first parameter indicates the number of arguments, and the second one is an array of the arguments, C style strings. This is why the project spec says to use C style strings for command line inputs, and C++ style strings everywhere else.. . If you are still confused, I suggest taking a look at the notes on strings, which explains what C style and C++ style strings are and how they work. The Command Line Arguments section and the File I/O section are very useful."}, {"id": 3364, "value": "No function other than Matrix_row,\u00a0Matrix_column, and the two versions of\u00a0Matrix_at\u00a0should access the\u00a0data\u00a0member directly"}, {"id": 3365, "value": "Any time you need to declare an image or matrix object, you should declare it dynamically using new/delete. If you find that this is required in resize.cpp, you should use new/delete."}, {"id": 3366, "value": "The assertion error suggests that, in your Image class, you\u2019re trying to access a matrix in a row that is out of the bounds of your matrix.For example, if your matrix has 5 rows, you might be trying to access row 7. Most likely, this is an issue with your Image class.To fix this, one suggestion is to use the Debugger in your IDE or Text Editor, so you can \u201cstep through\u201d your code and see where the faulty value is being passed."}, {"id": 3367, "value": "you should use the -> \u00a0(so mat->width) operator since you are trying to access a pointer to a matrix. This is briefly covered in lecture from monday there is a way to use the dot operator but you must de reference the matrix first and then use the dot operator like so (*mat).width\u00a0"}, {"id": 3368, "value": "I don't think the issue is in this function. It's most likely in some Matrix/Image function, or you're calling a function an excessive number of times. It'd help to look through all your files in office hours.. . You can also run\u00a0perf to find out where your code is taking the longest: https://eecs280staff.github.io/p2-cv/perf.html\u00a0"}, {"id": 3369, "value": "It's hard to know what the exact issue is without seeing your code (you can come to office hours to share your code). Generally, I would recommend putting a breakpoint at the very start of Image_public_test, and then debugging and stepping through to see what line causes your program to fail. Then consider if you are accessing off the bounds of an array on that line."}, {"id": 3370, "value": "Could you email eecs280admin@umich.edu with your situation? They'll be able to help you through there.\u00a0"}, {"id": 3371, "value": "It looks like you are returning -1 at the end of your main function in resize. Legal values for exit codes are between 0 - 255. You want to switch that to return 0 to signal a successful exit.\u00a0. . If you're interested, here's a stack overflow post that explains it in depth.\u00a0. https://stackoverflow.com/questions/31626445/c-programs-return-int-type-so-why-does-return-1-return-255. . . PS: you should edit your piazza username to have your uniqname; it makes it a lot easier for us to take a look at your autograder output"}, {"id": 3372, "value": "You should examine the logic you have on line 68 of your Matrix_row function and think about if the modulo operator yields the value you are looking for. Remember, the logic to find an element's row and an element's column will be different. It helps to draw out the data array to figure out what operations you can do to get to the value you are looking for.\u00a0"}, {"id": 3373, "value": ""}, {"id": 3374, "value": "As the spec mentions, there's no need to use loops for these functions, and doing so will make your code run quite slow.The better approach is to use pointer arithmetic: if you can somehow find the current index of the pointer within the Matrix's data, you can then use the modulo and division operations to determine the row and column the pointer is currently at within the Matrix's data.To find the index that the pointer is currently at, you just need to subtract the location of the pointer \"ptr\" (the one pointing at a cell in the Matrix's data) in memory and the location of the the beginning of the Matrix's data in memory.Hopefully this sets you on the right track!"}, {"id": 3375, "value": "I don't believe you have to print the name of the image at the beginning, only the _type_ of PPM image. The first line of the output will always be \"P3\" in our case, which indicates that the format is Plain PPM."}, {"id": 3376, "value": "There's no limit / minimum required test cases. Just try to catch as many bugs as possible, you can even include multiple asserts in one test case."}, {"id": 3377, "value": "The core issue here is that you cannot create dynamically sized arrays in C. That is, the size of a C array must be determined at compile-time, not run-time. By making the size of the array `height`, which is a variable you have created, the size of the array is determined at run-time. The best way to get around this is to make the size of the seam array the maximum size that it could possibly be. If you end up not using all of the \"positions\" you created in the seam array, that's completely fine!"}, {"id": 3378, "value": "If you look at line 250 of your matrix_tests.cpp, you are asserting that a pointer is equal to -1. These are mismatching types."}, {"id": 3379, "value": "There are a few ways of getting around this. You could either use a dynamically allocated array, with the new keyword, or your could just make an array of the max size you would possibly need."}, {"id": 3380, "value": "Yes, each Pixel represents a pixel in the image. You can set the color of the pixel by going into the red_channel, green_channel, and blue_channel, and changing the value of each for the pixel of the specified row. Hope that makes sense to you!"}, {"id": 3381, "value": "You shouldn't need to check the height/width of the individual channels in Image_tests.cpp. This is because the testing of matrix functions should be done in Matrix_tests.cpp. In Image_tests.cpp, using Image_height() and Image_width() is sufficient for testing the init functions."}, {"id": 3382, "value": "@778 offers some workable strategies around the interface constraint for testing Image. Since Matrix_tests is not part of the definition of Matrix, it cannot directly access any \"private\" members of Matrix. According to course convention, all the member variables of Matrix and Image are considered private, so you cannot refer to Matrix's member variables outside Matrix.h or Matrix.cpp, and you cannot refer to Image's member variables outside Image.h and Image.cpp. For Matrix_tests, you should use `Matrix_height(mat)` instead of `mat->height` and `Matrix_width(mat)` instead of `mat->width`."}, {"id": 3383, "value": "Well, for the Image_init() width and height issue, you can use the Image_width() and Image_height() to get the width and height.\u00a0. -- op Im aware of this part my confusion was on how to get access to red_channel.width and red_channel.height. *** og answerer: Ah, I get what you mean now. Though if you test it the printing way I beleive you will catch that kind of error, since if the channels aren't the right size you wont get the right output.. . For the first part, you have Image_get_pixel() which gives you the pixel with the rgb value, so you can access it through that way and test each pixel manually.. . Another way you can do this is create a string with the correct output and run Image_print() into a string, and then compare the values of the two. If you don't know how to do that, check out the\u00a0test_image_from_and_to_stream test in Image_public_test.cpp. -- I think this will work in a roundabout way, It'll be more work than I think it should be, but it'll doer. *** I did it that way, it's not too much work, you can just change around the test from Image_public_test.cpp to match what you need\u00a0"}, {"id": 3384, "value": "There should be a \"Git Changes\" tab where you can commit and push through a user interface.. . You can also always push through the linux terminal, as you can see here. "}, {"id": 3385, "value": "You are pretty much correct, see the explanation in @656, which also has some ways to get around this"}, {"id": 3386, "value": "You can share the code with your partner on github and then they can pull it and edit it - see this part of the setup guide."}, {"id": 3387, "value": "I don't believe we are allowed to submit more files. You can just have your helper functions defined and declared in the files you need them in."}, {"id": 3388, "value": "Use static_cast to cast the result to an int.. . . int row_num = static_cast<int>(ptr - mat -> data);"}, {"id": 3389, "value": ""}, {"id": 3390, "value": "This error means that compiling Matrix_puiblic_test.exe requires the existence of Matrix.cpp, which is missing. It's because Matrix.cpp is given to your under the name Matrix.cpp.starter. Change the name to Matrix.cpp and you should be good."}, {"id": 3391, "value": "The quick answer is that finding the size of a C array isn't as straight forward as finding the size of a `vector` (just v.size()) and that you aren't required to `assert` things to ensure that a function means the requires clause. It can just be assumed that the parameters are valid in p2.. . The longer answer is that `sizeof` will return the size of a type or variable in *bytes*. So if we know the size of the array and the size of an integer, we can divide them to get the number of integers in an array.. . ```. int\u00a0length =\u00a0sizeof(seam) / sizeof(int);  . ```. **EDIT:** Since the seam is passed into `find_minimal_vertical_seam`, it does not encode its total size---it is just a pointer, or a memory address. You can't verify that REQUIRES clause via an assert statement, and nor do you have to."}, {"id": 3392, "value": "Your program should work with any input .ppm file, so you should not restrict it to those 3. You can use the MAX_MATRIX_WIDTH and MAX_MATRIX_HEIGHT const global variables found in Matrix.h."}, {"id": 3393, "value": "see @698 for info on memory leaks. in this project, it is probably due to using `new` without a `delete` at the end of the function scope. for example:. . ```. image *img = new Image;. Image_init(parameters);. //...do stuff with image.... // end function. ```. the above code would cause a memory leak because we do not use `delete` to deallocate memory space created using `new`.. . to fix this, use the `delete` keyword after you're done using the image:. . ```. image *img = new Image;. Image_init(parameters);. //... do stuff with image.... delete img;. // end function. ```"}, {"id": 3394, "value": "In this function, `is` is your input data file. istream is helpful in this situation because it allows you to take your input (which is in the `istream is` parameter) and read it into other variables that you create. For your situation, I assume that you are trying to write into the istream (similar to how you would `cout << ` something), but in reality it works the other way. For example, if you did:. ```. string x;. is >> x;. ```. This would read the first word of the istream into the variable x."}, {"id": 3395, "value": "Please shoot us an email at eecs280admin@umich.edu!"}, {"id": 3396, "value": "Yes! https://eecs280staff.github.io/p2-cv/#ppm-format"}, {"id": 3397, "value": "Unfortunately, the only libraries you can use are <iostream>,\u00a0<fstream>,\u00a0<cstdlib>,\u00a0<sstream>,\u00a0<cassert>,\u00a0<string>. You don\u2019t need modf to implement matrix_row or matrix_column.. . You can use % to mod a value"}, {"id": 3398, "value": "You should first unpack the starterfiles, before getting to the version control. You can do this using the following commands:. ```. tar -xvzf starter-files.tar.gz. mv starter-files/* .. rm -rf starter-files starter-files.tar.gz. ```. After, follow the version control tutorial."}, {"id": 3399, "value": "Yes."}, {"id": 3400, "value": "Yes, the `void Image_init(Image* img, std::istream& is);` is the initializer used for the ppm image format."}, {"id": 3401, "value": ". I was thinking of using is >> // code here and using maybe some variable to keep track of the number of rows and columns so I can initalize them later after running through the for loops.. . Is that the right way of approaching this problem?. . You definitely want to use the\u00a0>> operator to read in data from the PPM file. You can then insert this data into the necessary matrices. One approach to keeping track of the rows and columns is to use a nested loop.\u00a0. . . Other than that, this function will only change the width and heights of the image correct?. . This function should also initialize red_channel, green_channel, and blue_channel. . . Follow Up: should we use the 1-D representation of the Matrix struct when implementing this function?\u00a0. . Or just use Matrix_at()?. . Do not access\u00a0data outside of Matrix.cpp, use Matrix_at"}, {"id": 3402, "value": "Notice the effects clause in these functions.\u00a0. . // EFFECTS:  Returns the minimal value in a particular . // region. The region is defined as elements in the . // given row and between column_start (inclusive) and . // column_end (exclusive).. . Since column_end is exclusive,\u00a0your function should be able to handle an input that is equal to the width."}, {"id": 3403, "value": "We don't make you write unit tests for resize and processing, but we will still run our own tests to make sure your code functions in all cases. You are welcome to write test cases for these files if it helps you, but we will not grade them.\u00a0\u00a0"}, {"id": 3404, "value": "For the second question, it looks like you have a memory leak at resize.cpp line 26. check there if there is a `new` keyword without a `delete`.. . For the first question, this means your program is failing to print the image to the output file using `image_print`.\u00a0Double check the bounds for the your for loop(s) in `Image_print`, and make sure they're doing what you want them to be doing.. . also, add your uniquename to your display name on piazza so it's easier for the instructors to see your submission on the AG!"}, {"id": 3405, "value": "Yes, this will calculate the integer value you are looking for not a hexadecimal address value.\u00a0"}, {"id": 3406, "value": "yes, just not in header files."}, {"id": 3407, "value": "Make sure you use a personal token or set up an SSH key. If you use the token, you should use that as your password. You won't need a password in the SSH method.. . Refer to @639 please for more information."}, {"id": 3408, "value": "I recommend learning version control. It's a tool in the industry that everyone uses, so take advantage of the resources available now to learn it :)"}, {"id": 3409, "value": "As said in the comments in the file, \"the size of seam is == Image_height(img)\", though you can just set the size of it to the max matrix height."}, {"id": 3410, "value": "While you are correct that they point to the same location in memory, the pointers are not the same. The only reason they point to the same location in memory is because arrays do not have any \"padding\" in cpp, if that makes sense. I found this diagram online that might help explain:. . So, while they do point to the same location, they don't reference the same things, and will give different values when dereferenced.. . Also, with array decay, if you simply try to get a value of an array, it will be converted into a pointer to the first element of the array."}, {"id": 3411, "value": "I think assert_sequence_equal() will do that for you. Take a look in unit_test_framework.h"}, {"id": 3412, "value": "You are correct about the method. You can manually put values into the matrix by doing Matrix_at(mat, 1, 1) = 1, for example."}, {"id": 3413, "value": "Yes, you should be running the make command of the file you are attempting to run after every change you make to the code. This is because the make command is generating an executable file which is what your computer is actually running when you run the program. Try generating a new executable by remaking your file and seeing if you have the same issue.\u00a0"}, {"id": 3414, "value": "Not committing changes will not interfere with the functionality of your code; However, committing often is good practice as it can protect against code regression (when your code is working and then you make changes that break it). You should certainly be committing changes every time you make progress with your code to preserve the functionality you currently have.\u00a0"}, {"id": 3415, "value": "I would say:. Image_init (the one that takes an istream) might be the most difficult since you need to correctly take inputs, or image_print because you need to correctly output everything with whitespaces.. . The rest aren't difficult at all, but here's what I would rank them if I had to (hardest to easiest)\". - Image_fill. - The other Image_init. - Image_get_pixel. - Image_set_pixel. - Image_width & Image_height"}, {"id": 3416, "value": "Yes to both questions.. . Technically, there is no one order to write the files in, so you could write Image.cpp even if you had not started Matrix.cpp. If there are bugs in your matrix code, this might cause Image to work incorrectly, particularly if there are issues with Matrix_at.. . If you\u2019re not sure if your matrix functions are working properly, consider writing test cases. You\u2019d be killing two birds with one stone that way :). "}, {"id": 3417, "value": "It looks like you had a memory leak in one of your Matrix tests. The most likely explanation is that you created a Matrix using the new keyword and failed to delete it before the program ended. Try looking through your code and making sure that you delete every instance of a Matrix you created using the new keyword.\u00a0"}, {"id": 3418, "value": "Please check this post. You might forget to add/delete space before \"\\n.\""}, {"id": 3419, "value": "mat is a pointer to a\u00a0const so you will have to make\u00a0start a\u00a0const int*. You also don't need to create a new variable; you can instead do:\u00a0. . int location = ptr - mat->data"}, {"id": 3420, "value": "Make sure you're storing the pointer in an\u00a0int* variable, not an int. You're probably trying to store the hexadecimal address in a regular integer.\u00a0"}, {"id": 3421, "value": ""}, {"id": 3422, "value": "No, you just have to initialize the width and height using mat->width and\u00a0mat->height. "}, {"id": 3423, "value": "You'll have to remember a few key ideas here:\u00a0. 1. Remember that the name of an array itself is actually a pointer to the first element in that array\u00a0. 2. You can add and subtract addresses just like normal addition and subtraction\u00a0. 3. The data array here is a 1D array so it may help to draw it out to understand how you can manipulate addresses to get what you need. . Think about this:\u00a0. If you were to subtract the starting address of your data array from the ptr address given to you, you would have essentially the elements index within the data array. What could you do to that index to find which row it belongs in?\u00a0. . Hint: What value could you divide by to give you the row of the element you are looking at?\u00a0\u00a0"}, {"id": 3424, "value": "std::bad_alloc is an error for an out of bounds memory write.. Make sure that you are deleting all objects created with all allocated memory. If you have for loops, make sure that they aren't looping out of bounds anywhere."}, {"id": 3425, "value": "You don't need to assert the requirements, all the Autograder tests should just follow them. The asserts are sometimes useful to make sure you don't write tests that don't follow them, but you probably won't pass uninitialized matrices in your tests so it should be fine."}, {"id": 3426, "value": "you should use pointer arithmetic to figure out the index.. "}, {"id": 3427, "value": "Did you try generating the Personal Access Token (classic) in github with the 'repo' access box checked? Using that as the password in the command line fixed this issue for me.\u00a0"}, {"id": 3428, "value": "I would personally recommend using Matrix_at, but both methods can work!"}, {"id": 3429, "value": "You are allowed to use any code we provide you, this does include the public tests.. You do not have to rewrite the cases, but I do recommend writing your own cases to get an understanding of what is happening."}, {"id": 3430, "value": "Initialize a `stringstream` object and write to it using the `<<` operator like so:. . ```c++. stringstream s; . s << [the PPM header];. s << values for pixel 1 << values for pixel 2 << [the rest of row 1] << endl;  . [write the rest of the rows...]. ```. . Then call `image_init` on an image with input stream `s` and assign that to an `Image` object. You can then manually check the pixel values in that `Image`.. . I tell students that the public test case is usually good enough and that if you are getting hung up on the syntax, this test isn't really something you should go overboard with trying to implement."}, {"id": 3431, "value": "That sounds good to me.. . This format may seem a bit redundant right now, but it'll make a bit more sense when we get to abstraction in lecture."}, {"id": 3432, "value": "Resolved in followups"}, {"id": 3433, "value": "See followups"}, {"id": 3434, "value": "Yes when you create a matrix pointer, technically speaking the pointer is pointing to the first byte in memory for that struct, which is an int. Technically speaking, you can use pointer arithmetic to access members directly from the original pointer, although I would highly\u00a0recommend against it.\u00a0 . . When accessing member variables of this matrix struct,\u00a0 it is a much better option to dereference the matrix pointer and work with the member variables from there.. . Note: Using pointer arithmetic is a good approach for the matrix data array, but don't use it for the overall pointer to the matrix struct.\u00a0. . "}, {"id": 3435, "value": "You aren't returning a pointer, so there's no need to allocate memory to live after the function returns. You can just use a regular old Pixel variable."}, {"id": 3436, "value": "The only example that will compile in your examples is the last one: `&(*mat).data[1]`, which will provide you with the _address_ of the second element in `data`. The other ones will not compile due to a type mismatch (you cannot access matrix member variables with a matrix pointer without dereferencing it first using `*`).. . `mat` is a _pointer_ to a matrix, so if we want to access any of its private members we need to first dereference it (`*mat`) and then access the private member using the dot operator. Another (cleaner) way to do this in one step is to use the arrow operator (`->`) which will dereference mat and use the dot operator. . . So if you wanted to access the array `data` within `mat`, you can use `mat->data[index]`."}, {"id": 3437, "value": "Remember that\u00a0mat is a pointer to a Matrix object, so to access\u00a0data, you would have to do\u00a0mat->data"}, {"id": 3438, "value": "Recall that because arrays are contiguous in memory, we can use pointer arithmetic to get the index.\u00a0"}, {"id": 3439, "value": "Make sure that you set your working directory correctly. It should be set to the directory that contains all your files, which includes the .ppm files. Instructions on setting your working directory can be found in the XCode portion of the setup tutorial.\u00a0"}, {"id": 3440, "value": "The number of rows represents the height and the columns represent the width"}, {"id": 3441, "value": "You should run a command like this to fix it. . git config --global --replace-all user.name \"<new name here>\""}, {"id": 3442, "value": "You are welcome to use the starter code to help you with writing tests"}, {"id": 3443, "value": "You will have to change your Matrix_fill function so it does not\u00a0access the data array directly. Instead, call the Matrix_at function inside Matrix_fill to modify the matrix.\u00a0. . The requirements outlined in the spec are present because it is good coding practice to respect the interface."}, {"id": 3444, "value": "A memory leak is when memory is dynamically allocated with the new operator, but not cleaned up. Basically, it's when your program tells the computer \"I need this memory, and I promise when I'm done, you'll be able to use it again.\" But your program failed to return that memory, and so now, nothing else can use that.. I believe what you have is a call stack. We see that the source of this leak is from \"operator new,\" and as you go further, you'll find what called new.. . It looks like new was called by Matrix_public_test on line 20, which was called by the unit_test_framework line 420, which was called by the same framework on line 509, which was called from your main function in line 60 of Matrix_public_test.cpp. . The \"leak of 1,000,008 bytes\" means that much was lost in that call of operator new. In this case, about a Megabyte"}, {"id": 3445, "value": "The dimensions for each of the images are most likely different, which may be why your code runs into an infinite loop. I would recommend using your debugger to see where and why your code runs forever."}, {"id": 3446, "value": "A message is just a note for yourself. It should just generally explain what you changed and why (the why being more important.) The 'M' next to it means that file was modified. After a code commit, if you want your changes to appear on GitHub, you have to \"push\" your changes,. You can do so by clicking on the arrow next to your commit button and selecting commit & push.. . . Alternatively, you can click the three dots the message box, and select \"push\". "}, {"id": 3447, "value": "Think about how you can utilize a function such as Matrix_at() to create the abstraction of modifying the 2d array"}, {"id": 3448, "value": "Without being able to look at all your code, people with a similar error had an error with the Matrix_at function or get_pixel function. This might be a question better suited for office hours though"}, {"id": 3449, "value": "I believe you can just read in those values and do nothing with them. If you want, you can also assert that they actually equal P3 and 255 to make sure whatever inputs you are passing to the function follow the required clause."}, {"id": 3450, "value": "Ptr should point to the memory address of the value in matrix, not just an index."}, {"id": 3451, "value": "Without seeing your code, this is hard to tell. Most likely it\u2019s related to your init function.\u00a0"}, {"id": 3452, "value": "It might be a little faster to just make one matrix, fill its border to a certain value using the function, then construct loops to iterate through all border locations and assert that the value is as expected at each border location. ASSERT_TRUE doesn't work for comparing two matrices; you need to go element by element and assert each one.\u00a0"}, {"id": 3453, "value": "no."}, {"id": 3454, "value": "Yes, you can use other functions you have written to test any function. . . To get a pointer to somewhere within the matrix, think about other functions in matrix.cpp you have written-- Is there a function that returns a pointer to a datum in the matrix?"}, {"id": 3455, "value": ". \u00a0-> is the same thing as dereference and dot operator. "}, {"id": 3456, "value": "I believe the values in your matrix after initialization are undefined, and could be anything. I don't think you need to worry about which values populate the matrix before you set the values yourself.."}, {"id": 3457, "value": "Note that you are assuming that all ints have been initialized to zero. Although it is common that many platforms/environments, like CAEN, will have integers set to default to zero, this is still undefined behaviour as it varies from system to system. This is because the memory associated with that variable can be anything before you assign a value to it, and some platforms will automatically zero out this memory beforehand.\u00a0As for your second question, I would encourage you to reason about this from the abstraction perspective. Although either way you describe works, does init make a guarantee that it will initialize a matrix of all zeros?\u00a0"}, {"id": 3458, "value": "As the student answer suggests it\u2019s stylistic choice.\u00a0"}, {"id": 3459, "value": "The dimensions of `data` should always stay the same. For Matrix_init, we simply want to initialize the matrix width and height. If you're stuck on this, take a look at the other data members of the Matrix struct located in matrix.h."}, {"id": 3460, "value": "I think the \"no loop\" statement only applies to Matrix_at, Matrix_row and Matrix_column functions."}, {"id": 3461, "value": "A false positive in this context means that the test you wrote passed with your code, but should have failed given a correct solution. This most likely means that the result you believe you should be expecting is incorrect.\u00a0This is why these test cases are passing when you run your code locally, but say they are false positives on the AG.\u00a0"}, {"id": 3462, "value": "One thing to note is that matrix at returns a pointer given a row and column, What function(s) give you the row and column of a given pointer?\u00a0"}, {"id": 3463, "value": "You have to initialize the image width and height as well as the other three matrices (red/green/blue channels) with `Matrix_init`. Remember that `Matrix_init` takes in a pointer to a matrix (so use the matrix addresses), width, and height."}, {"id": 3464, "value": "According to the RME, \"sets each element on the border of the Matrix to the given value\", I guess we don't need to worry about initializing/changing other elements other than the borders."}, {"id": 3465, "value": "Again, excellent question.. . Source (or Version) Control is just a term for any system to keep track of source code (C++ code) over time. . An example of source control might be to make a copy of your original file, edit the code, and then save it as a new name. That way every day you've worked on your project, you can track how much you've done.. Another example of source control might be emailing yourself files after each work session.. These are both source control techniques that I used when I was a freelance graphic designer. By keeping track of different versions of my graphics, I could be more flexible. Say an astroturf company wanted the buttons on their website to all be blue. So you make 'em blue. Now say they want to change them to pink. Alright, easy. Now say they want to change it back to blue. You might go through the easy but tedious process of changing all the buttons to blue, but that costs you time, and thus your client money. With source control, I could just revert my design to when the buttons were blue in a couple of clicks.. . GitHub is just one of the tools that builds in a bunch of great features that emails do not replicate so well. But there's plenty more out there: GitLab, SVN, Perforce, and more.. We chose GitHub for this course because it's the one most frequently used in industry. From personal experience, I know Tesla uses it, but Ubisoft uses Perforce, and another university I went to used SVN. Luckily, learning one makes learning the others really easy.. . Reason 1:. It's 11pm on March 8th, 2022, you've been coding for the past three hours and while you were close to finishing the project, you submit to the autograder and find that your score has gone down. Why the heck would that happen?. . . . With source control, I can see what changes I made on March 8th. . . . It looks like somewhere in this code, I must have broken something. Not only does that means I now know where to look for my bug, it also means that if ALL else fails, I can just git rid of those specific changes and go back to the version of my code that worked correctly.. . Reason 2:. Say you want to give your client proof of the work you've put in. You can show them a history of the changes you've made over time. For example, on Google Slides, I used version control to find out that I added this great slide at 12:03PM. . . Reason 3: Your laptop dies. Technology is fickle and painful. It will die on you when you least expect it. If you've ever made a backup of your computer, that's a kind of version control too. When I started programming, I broke my laptop, and then accidentally flung my backup drive against a wall. I lost all of my data.. With source control, you know that your code will be stored remotely, so if you need to download it on any other computer anywhere else in the world, you can do so very easily.. . Reason 4: Collaboration. This is the meat and potatoes of version control. Emailing files might work okay when you're working alone. But what if you've got a partner, or two, or three, or four hundred? You send an email to everyone with your code changes for the day, and they do the same. Then, it turns out that you've both changed the same file. Which version do you use? How do you get both people's code in. Now before you submit, you need to make sure you've properly weaved both peoples' codes into one file and test to make sure nothing was missed. This takes a LONG time. Not to mention, you might accidentally overwrite one-another's code.. . GitHub automates the process. With GitHub, when you make a change, you can \"push\" that change to a remote server somewhere across the world whose whole business is funded on the guarantee that your data never gets lost. Then, your partner can \"pull\" those changes from the server, and the server will automatically merge their version with your new changes. They can go on about their business, and when they're done, \"push\" their code. You can now \"pull\" and get those changes as well. This makes working together much faster.. . Reason 5: Branching. Say I'm making a game prototype, and I'm not sure if the tennis balls should be round, oval, or cubes. I want to make all three versions and send them to my partners to, who are responsible for whether the ball is green, blue, or red. By email, this would involve an ever increasing number of files being passed around, until suddenly you're downloading tennis_match1.cpp, tennis_match2.cpp, etc.... . In GitHub, you can have multiple \"branches.\" Say one branch for oval balls, one for cube balls, and one for round balls. This means that when you want to switch to the \"branch\" of code with the cube balls, you can decide to pull JUST that branch, and your IDE will switch all your files to that parallel universe. It's really great.. . . Hopefully that was all convincing enough, but I'm happy to expand if you'd like. Another really cool use of version control-esque behavior is the Wayback Machine, which lets you scour the web to see what Facebook looked like in 2008, or what your mother's website looked like before it was attacker by ransomware.. . . "}, {"id": 3466, "value": "I believe all you have to consider is height and width here, not data. In the function parameter, we pass in a pointer to an already existing instance of struct Matrix, and the only attributes we care about initializing here are the height and width. The array of data already exists; you don't need to make it again. So I think all you need to do is initialize the given height and widths to the dereference of the given matrix pointer.\u00a0"}, {"id": 3467, "value": "I would recommend starting with matrix -> image -> processing. . Matrix and image are about helping you understand interfaces, classes, and pointers which are topics from class.. . Processing is just a series of interesting formulas/algorithms, so as long as you follow the spec to the letter, you should be ok.\u00a0"}, {"id": 3468, "value": "Yes your test files are graded based on style"}, {"id": 3469, "value": "Try `cout` the value that `sizeof(mat->data)` returns in your code and see if you can spot any anomalies"}, {"id": 3470, "value": "Think about a few examples. If your matrix `mat` has 3 rows and 2 columns, how would you access the 1st item in the 1st row, i.e. `mat[0][0]` using a 1D array of size $$3\\times2$$. What about `mat[0][1]`? What about `mat[2][1]`?"}, {"id": 3471, "value": "Keeping your matrix 0-indexed might be better as your data array in the `struct Matrix` is also 0-indexed just so they are consistent."}, {"id": 3472, "value": ""}, {"id": 3473, "value": "A matrix is a compound object that's pre-defined for you in `matrix.h`. It has three member variables: `width`, `height`, and `data`. The last of which is a 1D `int` array representation of the matrix. That being said, you'll need to deal with the matrix object as a whole instead of looking at it as a 2D `int`  array."}, {"id": 3474, "value": "Resolved"}, {"id": 3475, "value": "The input to your function gives you\u00a0const Matrix* mat, which cannot be modified. When you create the pointer to the int, you aren't just copying the value, you're pointing to the actual object (the 0th element of the data array) in memory. However, you assign this to a non-const variable, which could theoretically be changed, but this isn't allowed as mat is const.. . You have some options here:. - make an int rather than int*, and just get the value of the element. - make your i variable const"}, {"id": 3476, "value": "resolved"}, {"id": 3477, "value": "Does it give you a similar warning when you try to compile in terminal with the Makefile? Can you also try to just quit VSCode and reopen it?"}, {"id": 3478, "value": "resolved"}, {"id": 3479, "value": "is the almost the same, the only difference is that one of them returns a const"}, {"id": 3480, "value": "Hey Anthony, this question might be better suited for office hours as there may be many possible reasons your processing_public_test is failing."}, {"id": 3481, "value": "No, that's just for the starter code so you have something in your main function"}, {"id": 3482, "value": "In general, you can only \"increase\" the const restriction of a variable, not decrease. For example, you can do `const [something] = [something]`, but not `[something] = const [something]`. Since `mat` is of type `const Matrix*`, `&mat->data[0]` is of type `const int*`, so you're trying to do `int* = const int*`."}, {"id": 3483, "value": "The pointer types must match. Remember that arrays decay to pointers, so consider using mat->data as a pointer in your arithmetic"}, {"id": 3484, "value": "It looks like you initialized your git repository in your home directory; you probably don't want config files like \".bash_profile\" tracked. Are you trying to create a repository for P2? To do so, make sure you extract the starter files (with \"tar -xzvf starter-files.tar.gz\") into a folder where you want your P2 code to go (so something like \"p2/\" or \"p2-cv/\"). Then, change directory into this folder (with \"cd p2-cv\") and initialize your repository there.. . Now, when you run \"git status,\" you should only see your P2 starter files as untracked. You can then run \"git add .\" and make an initial commit."}, {"id": 3485, "value": "Matrix is a data structure that we are implementing. It is implemented using a 1d array, but from the user's perspective, they can \"imagine\" it as a 2d array.. . This is an example of an abstraction.. We provide a \"2d\" interface to the user, but under the hood, we implement it using a 1d array.. . Assuming that Matrix is implemented correctly, we can access its elements by using the Matrix_at function.. The interface for Matrix_at is specified in Matrix.h.. . ---------------------------------------------------------. . Below is a small example:. Imagine we have a Matrix of width: 3, height: 2. Let's fill it with some random numbers.. We can visualize this matrix as:. 183 280 281. 203 370 376. . But under the hood, the data looks like: [183, 280, 281, 203, 370, 376]. (Note: the user doesn't need to know or care about this). . Assuming we have a pointer to this matrix called \"mat\", the user could get a pointer to 280 by doing:. . Matrix_at(mat, 0, 1);. . ---------------------------------------------------------. . Just want to stress again the role of abstraction here.. From the user's perspective, a Matrix is a 2d array that can be accessed using row and column.. From the developer's perspective, a Matrix is a 1d array - we have to write some code to provide the illusion that this is a 2d array to the user.. . Hope this helps!"}, {"id": 3486, "value": "For project 2, the files you need to submit are here. The unit test framework comes into play with test cases that you need to write using the framework. You'll write tests for matrix and image functions. The details are explained here, but you get points for catching bugs with your test cases."}, {"id": 3487, "value": "It's totally okay to not know where to start at first or feel overwhelmed!\u00a0. . I would recommend starting with Matrix_init, Matrix_width, and Matrix_height. These functions are the shortest for matrix.cpp and will help you quickly knock some functions out of the way.. . Next, I would work on Matrix_row and Matrix_column while paying attention to this portion of the spec that talks about the underlying 1-D array that we use to represent a 2-D matrix. After completing those two, I'd work on the two versions of Matrix_at which should feel more familiar after completing Matrix_row and Matrix_column.. . Next, Matrix_print, Matrix_fill, Matrix_fill_border, and Matrix_max are a good group of functions to think about and work on together. Last up would be Matrix_column_of_min_value_in_row and Matrix_min_value_in_row.. . . As you're going through all of these functions, it can be really helpful to draw out small matrices and get to the goal of the function by hand (i.e. map out how you would find the row, column, max, min val, etc.). Next, think about how this scales to matrices of any size.. . Another good thing to keep in mind is how your function works as your input varies. For some functions, this is the dimensions of the matrix, for others, it is the value at a certain point of the matrix.. . Feel free to come to office hours if you're having trouble thinking through function implementations or examples, or if you want to talk through a potential solution!"}, {"id": 3488, "value": "You may see in struct Matrix, the actual data is a 1d array, but we would like to think it as a 2D matrix so it has row and column.. For example, if you have {1, 2, 3, 4, 5, 6} as the real data, you may interact with it as if it is {{1, 2, 3}, {4, 5, 6}}. Given row 1 column 1, you should give element 5. (Note that this is just an example to illustrate the transformation between a 1d representation and a 2d representation, and this is not the syntax for array in C++).\u00a0"}, {"id": 3489, "value": "For students who have similar issues please refer to @599 on how to set up GitHub using SSH key. . To set up GitHub using tokens refer to this walkthrough"}, {"id": 3490, "value": "Resolved in follow-ups"}, {"id": 3491, "value": "You have first to add files to be tracked (this is called staging). You can either do. . . git add <one or more file names separated by space>. Or add them all at once (I\u2019ll be careful using this). . git add .. If you wanna undo a file you added, you can do. . git resolve <file name>"}, {"id": 3492, "value": "I don't think the autograder has been released yet for p2"}, {"id": 3493, "value": "Have you installed wget? If are not sure, you can check whether you have it through running which wget. If wget is installed, this command will print the path to the wget executable. If wget is not installed, this command will not print anything. You can install it by sudo apt install wget"}, {"id": 3494, "value": "Marking as resolved."}, {"id": 3495, "value": "It looks like the 485 stuff is just a specific example, you can still go through the example of add --> commit --> push with the sample file and just replace the 485-related parts with stuff relevant to this project. At least for me, since I've never used a repository before, it was very helpful to get a general idea of the workflow.\u00a0"}, {"id": 3496, "value": "will be resolved in office hours\u00a0"}, {"id": 3497, "value": "Check for extra blank lines and spaces."}, {"id": 3498, "value": "You don't necessarily need to delete commits, even though it might make your commit history look worse. If you want, you can also amend your commits, or revert/reset to an old one."}, {"id": 3499, "value": "Looks like all of the .h files are the same, so unless the requirements changed, I don't think so"}, {"id": 3500, "value": "Resolved"}, {"id": 3501, "value": "The issue is with using https option on github (the link you copied when you did remote add origin). Instead do this:. . git remote rm origin. git remote add origin <ssh link>. you can get the ssh link here. . As you can see, there's a tab next to HTTPS option saying SSH, copy the link for that instead.. . You would also need to set up ssh authentication on your computer. Refer to this tutorial for it."}, {"id": 3502, "value": "resolved"}, {"id": 3503, "value": "Both should probably set up version control, as both would need it to collaborate on the code."}, {"id": 3504, "value": "You probably have to use a personal access token instead. Try following the link in your terminal and/or this link: https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"}, {"id": 3505, "value": "Yes, that is fine. There is an ongoing push to rename \"master\" branches to \"main\". Whether you use master or main is up to you, but pick one and stick to it. The course uses main, but master will suffice as well."}, {"id": 3506, "value": "P2 will be released on Thursday, January 19."}, {"id": 3507, "value": "P2's spec will be updated and released after the completion of P1!"}, {"id": 3508, "value": "Project 2 will be released soon after Project 1 is due, so the link that you found is subject to significant change until that date.. . Congrats on finishing project 1 early! I would recommend spending the time now to review lecture materials (or get some rest) until project 2.. . Edit: I made a mistake with the Project 2 release date, apologies for the confusion"}], "links": [{"source": 2764, "target": 2859, "value": 0.7071067811865475}, {"source": 2764, "target": 3474, "value": 1.0}, {"source": 2771, "target": 2771, "value": 1.0}, {"source": 2776, "target": 2776, "value": 1.0000000000000002}, {"source": 2781, "target": 2781, "value": 0.9999999999999999}, {"source": 2784, "target": 2784, "value": 1.0}, {"source": 2785, "target": 2785, "value": 1.0}, {"source": 2785, "target": 3220, "value": 0.6060915267313264}, {"source": 2787, "target": 2787, "value": 1.0000000000000002}, {"source": 2800, "target": 2800, "value": 0.9999999999999998}, {"source": 2801, "target": 2801, "value": 1.0}, {"source": 2807, "target": 2807, "value": 0.9999999999999999}, {"source": 2808, "target": 2808, "value": 1.0}, {"source": 2813, "target": 2859, "value": 0.7071067811865475}, {"source": 2813, "target": 3474, "value": 1.0}, {"source": 2816, "target": 2816, "value": 0.9999999999999999}, {"source": 2821, "target": 2821, "value": 1.0}, {"source": 2828, "target": 2828, "value": 1.0}, {"source": 2834, "target": 2834, "value": 0.9999999999999997}, {"source": 2835, "target": 2835, "value": 1.0000000000000002}, {"source": 2839, "target": 2839, "value": 0.9999999999999996}, {"source": 2839, "target": 3067, "value": 0.6789146042562411}, {"source": 2841, "target": 2841, "value": 0.9999999999999998}, {"source": 2849, "target": 2849, "value": 1.0}, {"source": 2856, "target": 2856, "value": 0.9999999999999998}, {"source": 2857, "target": 2857, "value": 0.9999999999999999}, {"source": 2859, "target": 2859, "value": 0.9999999999999998}, {"source": 2859, "target": 3474, "value": 0.7071067811865475}, {"source": 2861, "target": 2861, "value": 0.9999999999999997}, {"source": 2861, "target": 3035, "value": 0.9258200997725515}, {"source": 2863, "target": 2863, "value": 0.9999999999999996}, {"source": 2865, "target": 3035, "value": 0.6123724356957946}, {"source": 2866, "target": 2866, "value": 1.0000000000000002}, {"source": 2874, "target": 2874, "value": 1.0}, {"source": 2878, "target": 2878, "value": 1.0}, {"source": 2878, "target": 3058, "value": 0.6666666666666666}, {"source": 2881, "target": 2881, "value": 0.9999999999999997}, {"source": 2883, "target": 2883, "value": 1.0}, {"source": 2884, "target": 2884, "value": 0.9999999999999998}, {"source": 2891, "target": 2968, "value": 0.6446583712203042}, {"source": 2894, "target": 2894, "value": 1.0}, {"source": 2894, "target": 2897, "value": 0.7777777777777777}, {"source": 2894, "target": 3120, "value": 0.6030226891555273}, {"source": 2894, "target": 3291, "value": 0.6735753140545634}, {"source": 2896, "target": 3474, "value": 0.7071067811865475}, {"source": 2897, "target": 2897, "value": 1.0}, {"source": 2897, "target": 3120, "value": 0.7035264706814485}, {"source": 2897, "target": 3291, "value": 0.8660254037844388}, {"source": 2902, "target": 2902, "value": 1.0000000000000002}, {"source": 2903, "target": 2903, "value": 1.0}, {"source": 2905, "target": 2905, "value": 1.0000000000000002}, {"source": 2905, "target": 3228, "value": 0.6110523814861512}, {"source": 2906, "target": 2906, "value": 1.0}, {"source": 2913, "target": 2913, "value": 1.0}, {"source": 2919, "target": 2919, "value": 0.9999999999999998}, {"source": 2922, "target": 2955, "value": 1.0}, {"source": 2924, "target": 2924, "value": 1.0000000000000002}, {"source": 2928, "target": 2928, "value": 1.0000000000000002}, {"source": 2929, "target": 3474, "value": 0.7071067811865475}, {"source": 2930, "target": 2930, "value": 0.9999999999999998}, {"source": 2935, "target": 2935, "value": 1.0}, {"source": 2936, "target": 3120, "value": 0.6154574548966638}, {"source": 2936, "target": 3291, "value": 0.7071067811865477}, {"source": 2938, "target": 2938, "value": 0.9999999999999998}, {"source": 2950, "target": 2950, "value": 0.9999999999999998}, {"source": 2955, "target": 2955, "value": 1.0}, {"source": 2956, "target": 2956, "value": 0.9999999999999998}, {"source": 2964, "target": 2964, "value": 1.0000000000000002}, {"source": 2968, "target": 2968, "value": 1.0000000000000002}, {"source": 2971, "target": 2971, "value": 1.0000000000000002}, {"source": 2973, "target": 2973, "value": 1.0}, {"source": 2974, "target": 2974, "value": 1.0}, {"source": 2978, "target": 2978, "value": 1.0}, {"source": 2979, "target": 2979, "value": 0.9999999999999998}, {"source": 2983, "target": 2983, "value": 1.0}, {"source": 2987, "target": 2987, "value": 1.0}, {"source": 2988, "target": 2988, "value": 1.0000000000000002}, {"source": 2989, "target": 2989, "value": 1.0}, {"source": 2990, "target": 2990, "value": 1.0}, {"source": 2993, "target": 2993, "value": 0.9999999999999997}, {"source": 2995, "target": 2995, "value": 1.0}, {"source": 2996, "target": 2996, "value": 0.9999999999999999}, {"source": 2999, "target": 2999, "value": 1.0}, {"source": 3000, "target": 3000, "value": 0.9999999999999997}, {"source": 3001, "target": 3001, "value": 1.0}, {"source": 3005, "target": 3005, "value": 1.0}, {"source": 3007, "target": 3007, "value": 0.9999999999999997}, {"source": 3010, "target": 3010, "value": 1.0}, {"source": 3011, "target": 3011, "value": 1.0000000000000002}, {"source": 3013, "target": 3013, "value": 1.0}, {"source": 3014, "target": 3014, "value": 1.0000000000000002}, {"source": 3020, "target": 3020, "value": 0.9999999999999998}, {"source": 3021, "target": 3021, "value": 1.0000000000000002}, {"source": 3022, "target": 3022, "value": 1.0000000000000002}, {"source": 3023, "target": 3023, "value": 0.9999999999999999}, {"source": 3024, "target": 3024, "value": 0.9999999999999999}, {"source": 3025, "target": 3025, "value": 0.9999999999999999}, {"source": 3035, "target": 3035, "value": 1.0000000000000002}, {"source": 3035, "target": 3175, "value": 0.6123724356957946}, {"source": 3039, "target": 3039, "value": 1.0}, {"source": 3041, "target": 3041, "value": 1.0}, {"source": 3045, "target": 3045, "value": 1.0000000000000002}, {"source": 3046, "target": 3046, "value": 1.0000000000000004}, {"source": 3049, "target": 3058, "value": 0.9428090415820634}, {"source": 3052, "target": 3052, "value": 0.9999999999999999}, {"source": 3056, "target": 3056, "value": 0.9999999999999998}, {"source": 3058, "target": 3058, "value": 1.0000000000000002}, {"source": 3066, "target": 3066, "value": 0.9999999999999998}, {"source": 3067, "target": 3067, "value": 0.9999999999999999}, {"source": 3070, "target": 3070, "value": 0.9999999999999998}, {"source": 3070, "target": 3240, "value": 0.7905694150420948}, {"source": 3078, "target": 3275, "value": 0.6172133998483676}, {"source": 3084, "target": 3084, "value": 0.9999999999999997}, {"source": 3088, "target": 3474, "value": 1.0}, {"source": 3092, "target": 3092, "value": 1.0}, {"source": 3093, "target": 3093, "value": 1.0}, {"source": 3104, "target": 3104, "value": 1.0000000000000002}, {"source": 3110, "target": 3110, "value": 1.0}, {"source": 3112, "target": 3112, "value": 1.0}, {"source": 3120, "target": 3120, "value": 1.0000000000000002}, {"source": 3120, "target": 3291, "value": 0.6092717958449425}, {"source": 3125, "target": 3125, "value": 1.0}, {"source": 3128, "target": 3128, "value": 0.9999999999999999}, {"source": 3131, "target": 3131, "value": 0.9999999999999998}, {"source": 3134, "target": 3134, "value": 1.0000000000000002}, {"source": 3135, "target": 3135, "value": 1.0000000000000004}, {"source": 3136, "target": 3220, "value": 0.6831300510639732}, {"source": 3139, "target": 3139, "value": 0.9999999999999999}, {"source": 3140, "target": 3140, "value": 0.9999999999999998}, {"source": 3140, "target": 3235, "value": 0.6834917826493252}, {"source": 3142, "target": 3142, "value": 1.0000000000000002}, {"source": 3144, "target": 3144, "value": 1.0000000000000002}, {"source": 3145, "target": 3145, "value": 0.9999999999999998}, {"source": 3146, "target": 3474, "value": 0.7071067811865475}, {"source": 3149, "target": 3149, "value": 1.0}, {"source": 3156, "target": 3156, "value": 1.0}, {"source": 3168, "target": 3291, "value": 0.8703882797784892}, {"source": 3172, "target": 3172, "value": 0.9999999999999994}, {"source": 3175, "target": 3175, "value": 1.0}, {"source": 3177, "target": 3177, "value": 1.0000000000000002}, {"source": 3179, "target": 3179, "value": 0.9999999999999999}, {"source": 3182, "target": 3182, "value": 1.0000000000000002}, {"source": 3183, "target": 3183, "value": 0.9999999999999999}, {"source": 3186, "target": 3186, "value": 1.0}, {"source": 3192, "target": 3192, "value": 1.0000000000000002}, {"source": 3196, "target": 3196, "value": 1.0000000000000002}, {"source": 3198, "target": 3198, "value": 1.0000000000000002}, {"source": 3211, "target": 3474, "value": 1.0}, {"source": 3212, "target": 3212, "value": 1.0}, {"source": 3217, "target": 3217, "value": 1.0000000000000002}, {"source": 3220, "target": 3220, "value": 0.9999999999999998}, {"source": 3221, "target": 3221, "value": 1.0}, {"source": 3222, "target": 3222, "value": 0.9999999999999999}, {"source": 3224, "target": 3224, "value": 1.0}, {"source": 3227, "target": 3227, "value": 1.0000000000000002}, {"source": 3228, "target": 3228, "value": 1.0000000000000002}, {"source": 3235, "target": 3235, "value": 0.9999999999999999}, {"source": 3237, "target": 3474, "value": 1.0}, {"source": 3239, "target": 3239, "value": 1.0}, {"source": 3240, "target": 3240, "value": 1.0}, {"source": 3243, "target": 3243, "value": 1.0000000000000004}, {"source": 3244, "target": 3244, "value": 0.9999999999999999}, {"source": 3245, "target": 3245, "value": 1.0}, {"source": 3251, "target": 3251, "value": 0.9999999999999999}, {"source": 3252, "target": 3252, "value": 0.9999999999999998}, {"source": 3255, "target": 3255, "value": 1.0}, {"source": 3257, "target": 3257, "value": 1.0000000000000002}, {"source": 3258, "target": 3474, "value": 0.7071067811865475}, {"source": 3265, "target": 3265, "value": 1.0}, {"source": 3267, "target": 3474, "value": 0.7071067811865475}, {"source": 3268, "target": 3482, "value": 0.7207944173135364}, {"source": 3269, "target": 3269, "value": 1.0000000000000002}, {"source": 3271, "target": 3271, "value": 0.9999999999999997}, {"source": 3274, "target": 3274, "value": 1.0000000000000002}, {"source": 3275, "target": 3275, "value": 1.0000000000000002}, {"source": 3279, "target": 3279, "value": 0.9999999999999997}, {"source": 3280, "target": 3280, "value": 1.0000000000000002}, {"source": 3282, "target": 3282, "value": 1.0000000000000002}, {"source": 3283, "target": 3283, "value": 1.0000000000000002}, {"source": 3285, "target": 3285, "value": 0.9999999999999999}, {"source": 3286, "target": 3474, "value": 0.7071067811865475}, {"source": 3290, "target": 3290, "value": 1.0000000000000002}, {"source": 3291, "target": 3291, "value": 1.0000000000000002}, {"source": 3299, "target": 3299, "value": 1.0000000000000004}, {"source": 3301, "target": 3301, "value": 1.0}, {"source": 3307, "target": 3307, "value": 0.9999999999999998}, {"source": 3311, "target": 3311, "value": 1.0}, {"source": 3314, "target": 3314, "value": 1.0}, {"source": 3317, "target": 3474, "value": 1.0}, {"source": 3319, "target": 3319, "value": 1.0000000000000002}, {"source": 3320, "target": 3320, "value": 1.0000000000000002}, {"source": 3322, "target": 3322, "value": 1.0000000000000002}, {"source": 3323, "target": 3323, "value": 0.9999999999999999}, {"source": 3324, "target": 3324, "value": 0.9999999999999996}, {"source": 3339, "target": 3339, "value": 0.9999999999999997}, {"source": 3341, "target": 3341, "value": 0.9999999999999998}, {"source": 3343, "target": 3343, "value": 0.9999999999999992}, {"source": 3345, "target": 3345, "value": 1.0}, {"source": 3346, "target": 3346, "value": 1.0}, {"source": 3352, "target": 3352, "value": 1.0}, {"source": 3355, "target": 3474, "value": 1.0}, {"source": 3356, "target": 3356, "value": 1.0000000000000002}, {"source": 3366, "target": 3366, "value": 1.0}, {"source": 3371, "target": 3371, "value": 1.0}, {"source": 3379, "target": 3379, "value": 1.0}, {"source": 3382, "target": 3382, "value": 1.0}, {"source": 3385, "target": 3385, "value": 0.9999999999999999}, {"source": 3388, "target": 3388, "value": 1.0}, {"source": 3392, "target": 3392, "value": 1.0}, {"source": 3393, "target": 3393, "value": 1.0}, {"source": 3394, "target": 3394, "value": 1.0}, {"source": 3404, "target": 3404, "value": 1.0000000000000002}, {"source": 3410, "target": 3410, "value": 1.0000000000000002}, {"source": 3419, "target": 3419, "value": 1.0}, {"source": 3419, "target": 3475, "value": 0.6014065304058602}, {"source": 3419, "target": 3482, "value": 0.6221710168382553}, {"source": 3424, "target": 3424, "value": 1.0000000000000002}, {"source": 3427, "target": 3427, "value": 1.0}, {"source": 3432, "target": 3474, "value": 0.7071067811865475}, {"source": 3440, "target": 3440, "value": 0.9999999999999998}, {"source": 3441, "target": 3441, "value": 0.9999999999999999}, {"source": 3444, "target": 3444, "value": 1.0000000000000002}, {"source": 3451, "target": 3451, "value": 0.9999999999999999}, {"source": 3457, "target": 3457, "value": 0.9999999999999998}, {"source": 3473, "target": 3473, "value": 1.0000000000000002}, {"source": 3474, "target": 3474, "value": 1.0}, {"source": 3475, "target": 3475, "value": 1.0}, {"source": 3475, "target": 3482, "value": 0.613651448591481}, {"source": 3477, "target": 3477, "value": 1.0}, {"source": 3482, "target": 3482, "value": 0.9999999999999999}, {"source": 3489, "target": 3489, "value": 1.0000000000000002}, {"source": 3492, "target": 3492, "value": 0.9999999999999999}, {"source": 3501, "target": 3501, "value": 0.9999999999999998}]}